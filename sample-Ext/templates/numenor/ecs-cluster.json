{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {
        "ASGLifecycleHookECSDrainInstanceHeartbeatTimeoutOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout"
                        },
                        ""
                    ]
                }
            ]
        },
        "AdditionalStorage": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "AdditionalStorageSizeOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "AdditionalStorageSize"
                                        },
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "AdditionalStorageSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        0,
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "AdditionalStorageMount": {
            "Fn::And": [
                {
                    "Condition": "AdditionalStorage"
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                true,
                                "None"
                            ]
                        }
                    ]
                }
            ]
        },
        "AdditionalStorageSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AdditionalStorageSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "CapacityDesiredOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityDesired"
                        },
                        ""
                    ]
                }
            ]
        },
        "CapacityMaxOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityMax"
                        },
                        ""
                    ]
                }
            ]
        },
        "CapacityMinOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityMin"
                        },
                        ""
                    ]
                }
            ]
        },
        "CloudFormationInit": {
            "Fn::Equals": [
                {
                    "Ref": "UpdateMode"
                },
                "Cfn"
            ]
        },
        "CloudFrontWebACLId": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CloudFrontWebACLIdOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "CloudFrontWebACLId"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CloudFrontWebACLIdOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontWebACLIdOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CloudFrontWebACLId"
                        },
                        ""
                    ]
                }
            ]
        },
        "DoNotSignal": {
            "Fn::And": [
                {
                    "Condition": "RollingUpdate"
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DoNotSignal"
                        },
                        "True"
                    ]
                }
            ]
        },
        "EfsMounts": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "EfsMounts"
                                }
                            ]
                        },
                        ""
                    ]
                }
            ]
        },
        "GPUInstance": {
            "Fn::Equals": [
                {
                    "Ref": "GPUInstance"
                },
                "True"
            ]
        },
        "GPUInstanceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "GPUInstance"
                        },
                        ""
                    ]
                }
            ]
        },
        "HealthCheckGracePeriodOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "HealthCheckGracePeriod"
                        },
                        ""
                    ]
                }
            ]
        },
        "ImageIdLatest": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ImageIdOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ImageId"
                                },
                                "latest"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ImageIdOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ImageId"
                                    ]
                                },
                                "latest"
                            ]
                        }
                    ]
                }
            ]
        },
        "ImageIdOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ImageId"
                        },
                        ""
                    ]
                }
            ]
        },
        "InstaceEphemeral0": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "InstanceTypeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        "InstanceTypes",
                                        {
                                            "Ref": "InstanceType"
                                        },
                                        "InstaceEphemeral0"
                                    ]
                                },
                                "1"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "InstanceTypeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        "InstanceTypes",
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "InstanceType"
                                            ]
                                        },
                                        "InstaceEphemeral0"
                                    ]
                                },
                                "1"
                            ]
                        }
                    ]
                }
            ]
        },
        "InstaceEphemeral1": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "InstanceTypeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        "InstanceTypes",
                                        {
                                            "Ref": "InstanceType"
                                        },
                                        "InstaceEphemeral1"
                                    ]
                                },
                                "1"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "InstanceTypeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        "InstanceTypes",
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "InstanceType"
                                            ]
                                        },
                                        "InstaceEphemeral1"
                                    ]
                                },
                                "1"
                            ]
                        }
                    ]
                }
            ]
        },
        "InstaceEphemeral2": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "InstanceTypeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        "InstanceTypes",
                                        {
                                            "Ref": "InstanceType"
                                        },
                                        "InstaceEphemeral2"
                                    ]
                                },
                                "1"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "InstanceTypeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        "InstanceTypes",
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "InstanceType"
                                            ]
                                        },
                                        "InstaceEphemeral2"
                                    ]
                                },
                                "1"
                            ]
                        }
                    ]
                }
            ]
        },
        "InstanceTypeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "InstanceType"
                        },
                        "default"
                    ]
                }
            ]
        },
        "KeyNameOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "KeyName"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpPort": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ListenerLoadBalancerHttpPortOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ListenerLoadBalancerHttpPort"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ListenerLoadBalancerHttpPortOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        80,
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpPortOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpsPort": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ListenerLoadBalancerHttpsPortOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ListenerLoadBalancerHttpsPort"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ListenerLoadBalancerHttpsPortOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        443,
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpsPortOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        ""
                    ]
                }
            ]
        },
        "LoadBalancerSslCertificateAdHoc": {
            "Fn::And": [
                {
                    "Condition": "ListenerLoadBalancerHttpsPort"
                },
                {
                    "Fn::Equals": [
                        true,
                        "None"
                    ]
                }
            ]
        },
        "LoadBalancerSslCertificateOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LoadBalancerSslCertificate"
                        },
                        ""
                    ]
                }
            ]
        },
        "RollingUpdate": {
            "Fn::Equals": [
                {
                    "Ref": "UpdateMode"
                },
                "Rolling"
            ]
        },
        "ScalingPolicyTrackingsASCustom": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValueOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValue"
                                        },
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValueOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        60,
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationCustomizedMetricSpecificationStatisticOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationCustomizedMetricSpecificationStatistic"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValueOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValue"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDown": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownRecurrenceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScheduledActionDownRecurrence"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownRecurrenceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionDownRecurrence"
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownCapacityDesiredSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownDesiredSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownDesiredSize"
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownDesiredSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownDesiredSize"
                                    ]
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownCapacityMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "CapacityMax"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownCapacityMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownMinSize"
                                    ]
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownDesiredSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownDesiredSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownKeepDesiredSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownDesiredSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownDesiredSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownDesiredSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownDesiredSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownKeepMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownKeepMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownMinSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownMaxSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownMaxSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownMinSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownMinSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownRecurrenceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownRecurrence"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownStartTimeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownStartTime"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionRotate": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionRotateRecurrenceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScheduledActionRotateRecurrence"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionRotateRecurrenceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "45 5 * * *",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionRotateCapacityDesiredSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionRotateDesiredSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionRotateDesiredSize"
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionRotateDesiredSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateDesiredSize"
                                    ]
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionRotateCapacityMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionRotateMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionRotateMaxSize"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionRotateMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateMaxSize"
                                    ]
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionRotateCapacityMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionRotateMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionRotateMinSize"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionRotateMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateMinSize"
                                    ]
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionRotateDesiredSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionRotateDesiredSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionRotateKeepDesiredSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionRotateDesiredSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionRotateDesiredSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionRotateDesiredSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateDesiredSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionRotateKeepMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionRotateMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionRotateMaxSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionRotateMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateMaxSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionRotateKeepMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionRotateMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionRotateMinSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionRotateMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateMinSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionRotateMaxSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionRotateMaxSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionRotateMinSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionRotateMinSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionRotateRecurrenceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionRotateRecurrence"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionRotateStartTimeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionRotateStartTime"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUp": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpRecurrenceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScheduledActionUpRecurrence"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpRecurrenceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionUpRecurrence"
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpCapacityDesiredSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpDesiredSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpDesiredSize"
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpDesiredSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "CapacityDesired",
                                "CapacityDesired"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpCapacityMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "CapacityMax",
                                "CapacityMax"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpCapacityMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "CapacityMin",
                                "CapacityMin"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpDesiredSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpDesiredSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpKeepDesiredSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpDesiredSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpDesiredSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpDesiredSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "CapacityDesired",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpKeepMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "CapacityMax",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpKeepMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "CapacityMin",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpMaxSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpMaxSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpMinSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpMinSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpRecurrenceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpRecurrence"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpStartTimeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpStartTime"
                        },
                        ""
                    ]
                }
            ]
        },
        "SecurityGroup0": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup1": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                1,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                1,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup2": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                2,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                2,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup3": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                3,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                3,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroupsOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "SecurityGroups"
                        },
                        ",,,"
                    ]
                }
            ]
        },
        "Spot": {
            "Fn::Or": [
                {
                    "Condition": "SpotAuto"
                },
                {
                    "Condition": "SpotPrice"
                }
            ]
        },
        "SpotAuto": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "SpotAutoOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "SpotAuto"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "SpotAutoOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SpotAutoMinOnDemandNumber": {
            "Fn::And": [
                {
                    "Condition": "SpotAuto"
                },
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SpotAutoMinOnDemandNumberOverride"
                                },
                                {
                                    "Fn::Not": [
                                        {
                                            "Fn::Equals": [
                                                {
                                                    "Ref": "SpotAutoMinOnDemandNumber"
                                                },
                                                "None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SpotAutoMinOnDemandNumberOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Not": [
                                        {
                                            "Fn::Equals": [
                                                "None",
                                                "None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SpotAutoMinOnDemandNumberOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "SpotAutoMinOnDemandNumber"
                        },
                        ""
                    ]
                }
            ]
        },
        "SpotAutoOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "SpotAuto"
                        },
                        ""
                    ]
                }
            ]
        },
        "SpotPrice": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "SpotPriceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "SpotPrice"
                                        },
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "SpotPriceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        0,
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SpotPriceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "SpotPrice"
                        },
                        ""
                    ]
                }
            ]
        },
        "VolumeSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "VolumeSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "WillReplace": {
            "Fn::Equals": [
                {
                    "Ref": "UpdateMode"
                },
                "Replace"
            ]
        }
    },
    "Description": "ecs-cluster [ec2]",
    "Mappings": {
        "InstanceTypes": {
            "c3.2xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "0"
            },
            "c3.4xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "0"
            },
            "c3.large": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "0"
            },
            "c3.xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "0"
            },
            "c4.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "c4.4xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "c4.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "c4.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "c5.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "c5.4xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "c5.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "c5.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "d2.2xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "1"
            },
            "d2.4xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "1"
            },
            "d2.xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "1"
            },
            "default": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "g2.2xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "g3s.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "i2.2xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "0"
            },
            "i2.4xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "1"
            },
            "i2.xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m3.2xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "0"
            },
            "m3.large": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m3.medium": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m3.xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "1",
                "InstaceEphemeral2": "0"
            },
            "m4.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m4.4xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m4.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m4.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m5.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m5.4xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m5.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "m5.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r3.2xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r3.4xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r3.large": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r3.xlarge": {
                "InstaceEphemeral0": "1",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r4.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r4.4xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r4.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r4.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r5.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r5.4xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r5.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "r5.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t2.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t2.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t2.medium": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t2.micro": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t2.nano": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t2.small": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t2.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t3.2xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t3.large": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t3.medium": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t3.micro": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t3.nano": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t3.small": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            },
            "t3.xlarge": {
                "InstaceEphemeral0": "0",
                "InstaceEphemeral1": "0",
                "InstaceEphemeral2": "0"
            }
        },
        "dev": {
            "eu-central-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 900,
                "AlarmBackendExternal5XXEvaluationPeriods": 0,
                "AlarmBackendInternal5XXEvaluationPeriods": 0,
                "AlarmTargetEC2External5XXEvaluationPeriods": 0,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 3,
                "CapacityMin": 1,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ImageId": "ami-0e1d30823ff9f8459",
                "InstanceType": "t3.large",
                "ScheduledActionDownDesiredSize": 0,
                "ScheduledActionDownMinSize": 0,
                "ScheduledActionRotateDesiredSize": 0,
                "ScheduledActionRotateMaxSize": 0,
                "ScheduledActionRotateMinSize": 0,
                "VolumeSize": 100
            },
            "eu-west-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 900,
                "AlarmBackendExternal5XXEvaluationPeriods": 0,
                "AlarmBackendInternal5XXEvaluationPeriods": 0,
                "AlarmTargetEC2External5XXEvaluationPeriods": 0,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 3,
                "CapacityMin": 1,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ImageId": "ami-02bf9e90a6e30dc74",
                "InstanceType": "t3.large",
                "ScheduledActionDownDesiredSize": 0,
                "ScheduledActionDownMinSize": 0,
                "ScheduledActionRotateDesiredSize": 0,
                "ScheduledActionRotateMaxSize": 0,
                "ScheduledActionRotateMinSize": 0,
                "VolumeSize": 100
            },
            "us-east-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 900,
                "AlarmBackendExternal5XXEvaluationPeriods": 0,
                "AlarmBackendInternal5XXEvaluationPeriods": 0,
                "AlarmTargetEC2External5XXEvaluationPeriods": 0,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 3,
                "CapacityMin": 1,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ImageId": "ami-0b16d80945b1a9c7d",
                "InstanceType": "t3.large",
                "ScheduledActionDownDesiredSize": 0,
                "ScheduledActionDownMinSize": 0,
                "ScheduledActionRotateDesiredSize": 0,
                "ScheduledActionRotateMaxSize": 0,
                "ScheduledActionRotateMinSize": 0,
                "VolumeSize": 100
            }
        },
        "prd": {
            "eu-central-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 3600,
                "AlarmBackendExternal5XXEvaluationPeriods": 2,
                "AlarmBackendInternal5XXEvaluationPeriods": 2,
                "AlarmTargetEC2External5XXEvaluationPeriods": 2,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ImageId": "ami-0e1d30823ff9f8459",
                "InstanceType": "c5.xlarge",
                "ScheduledActionDownDesiredSize": "k",
                "ScheduledActionDownMinSize": 2,
                "ScheduledActionDownRecurrence": "0 22 * * *",
                "ScheduledActionRotateDesiredSize": 3,
                "ScheduledActionRotateMaxSize": 3,
                "ScheduledActionRotateMinSize": "CapacityMin",
                "ScheduledActionUpRecurrence": "00 6 * * *",
                "VolumeSize": 50
            },
            "eu-west-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 3600,
                "AlarmBackendExternal5XXEvaluationPeriods": 2,
                "AlarmBackendInternal5XXEvaluationPeriods": 2,
                "AlarmTargetEC2External5XXEvaluationPeriods": 2,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ImageId": "ami-02bf9e90a6e30dc74",
                "InstanceType": "c5.xlarge",
                "ScheduledActionDownDesiredSize": "k",
                "ScheduledActionDownMinSize": 2,
                "ScheduledActionDownRecurrence": "0 22 * * *",
                "ScheduledActionRotateDesiredSize": 3,
                "ScheduledActionRotateMaxSize": 3,
                "ScheduledActionRotateMinSize": "CapacityMin",
                "ScheduledActionUpRecurrence": "00 6 * * *",
                "VolumeSize": 50
            },
            "us-east-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 3600,
                "AlarmBackendExternal5XXEvaluationPeriods": 2,
                "AlarmBackendInternal5XXEvaluationPeriods": 2,
                "AlarmTargetEC2External5XXEvaluationPeriods": 2,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ImageId": "ami-0b16d80945b1a9c7d",
                "InstanceType": "c5.xlarge",
                "ScheduledActionDownDesiredSize": "k",
                "ScheduledActionDownMinSize": 2,
                "ScheduledActionDownRecurrence": "0 22 * * *",
                "ScheduledActionRotateDesiredSize": 3,
                "ScheduledActionRotateMaxSize": 3,
                "ScheduledActionRotateMinSize": "CapacityMin",
                "ScheduledActionUpRecurrence": "00 6 * * *",
                "VolumeSize": 50
            }
        },
        "stg": {
            "eu-central-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 900,
                "AlarmBackendExternal5XXEvaluationPeriods": 0,
                "AlarmBackendInternal5XXEvaluationPeriods": 0,
                "AlarmTargetEC2External5XXEvaluationPeriods": 0,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 3,
                "CapacityMin": 1,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ImageId": "ami-0e1d30823ff9f8459",
                "InstanceType": "t3.large",
                "ScheduledActionDownDesiredSize": 0,
                "ScheduledActionDownMinSize": 0,
                "ScheduledActionRotateDesiredSize": 0,
                "ScheduledActionRotateMaxSize": 0,
                "ScheduledActionRotateMinSize": 0,
                "VolumeSize": 100
            },
            "eu-west-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 900,
                "AlarmBackendExternal5XXEvaluationPeriods": 0,
                "AlarmBackendInternal5XXEvaluationPeriods": 0,
                "AlarmTargetEC2External5XXEvaluationPeriods": 0,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 3,
                "CapacityMin": 1,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ImageId": "ami-02bf9e90a6e30dc74",
                "InstanceType": "t3.large",
                "ScheduledActionDownDesiredSize": 0,
                "ScheduledActionDownMinSize": 0,
                "ScheduledActionRotateDesiredSize": 0,
                "ScheduledActionRotateMaxSize": 0,
                "ScheduledActionRotateMinSize": 0,
                "VolumeSize": 100
            },
            "us-east-1": {
                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": 900,
                "AlarmBackendExternal5XXEvaluationPeriods": 0,
                "AlarmBackendInternal5XXEvaluationPeriods": 0,
                "AlarmTargetEC2External5XXEvaluationPeriods": 0,
                "AlarmTargetEC2Internal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 3,
                "CapacityMin": 1,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ImageId": "ami-0b16d80945b1a9c7d",
                "InstanceType": "t3.large",
                "ScheduledActionDownDesiredSize": 0,
                "ScheduledActionDownMinSize": 0,
                "ScheduledActionRotateDesiredSize": 0,
                "ScheduledActionRotateMaxSize": 0,
                "ScheduledActionRotateMinSize": 0,
                "VolumeSize": 100
            }
        }
    },
    "Outputs": {
        "AdditionalStorageSize": {
            "Value": {
                "Fn::If": [
                    "AdditionalStorageSizeOverride",
                    {
                        "Ref": "AdditionalStorageSize"
                    },
                    0
                ]
            }
        },
        "BrandDomain": {
            "Value": "numenor.arda"
        },
        "Capacity": {
            "Value": {
                "Fn::Sub": [
                    "Desired=${CapacityDesired},Min=${CapacityMin},Max=${CapacityMax}",
                    {
                        "CapacityDesired": {
                            "Fn::If": [
                                "CapacityDesiredOverride",
                                {
                                    "Ref": "CapacityDesired"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityDesired"
                                    ]
                                }
                            ]
                        },
                        "CapacityMax": {
                            "Fn::If": [
                                "CapacityMaxOverride",
                                {
                                    "Ref": "CapacityMax"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMax"
                                    ]
                                }
                            ]
                        },
                        "CapacityMin": {
                            "Fn::If": [
                                "CapacityMinOverride",
                                {
                                    "Ref": "CapacityMin"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMin"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CertificateLoadBalancerAdHocExternal": {
            "Condition": "LoadBalancerSslCertificateAdHoc",
            "Value": {
                "Ref": "CertificateLoadBalancerAdHocExternal"
            }
        },
        "CloudFrontWebACLId": {
            "Value": {
                "Fn::If": [
                    "CloudFrontWebACLIdOverride",
                    {
                        "Ref": "CloudFrontWebACLId"
                    },
                    "None"
                ]
            }
        },
        "Cluster": {
            "Export": {
                "Name": {
                    "Fn::Sub": "Cluster-${AWS::StackName}"
                }
            },
            "Value": {
                "Ref": "Cluster"
            }
        },
        "DoNotSignal": {
            "Value": {
                "Ref": "DoNotSignal"
            }
        },
        "EfsMounts": {
            "Condition": "EfsMounts",
            "Value": {
                "Fn::Join": [
                    ",",
                    {
                        "Ref": "EfsMounts"
                    }
                ]
            }
        },
        "Env": {
            "Value": {
                "Ref": "Env"
            }
        },
        "EnvRole": {
            "Value": {
                "Ref": "EnvRole"
            }
        },
        "EnvStackVersion": {
            "Value": {
                "Ref": "EnvStackVersion"
            }
        },
        "ImageId": {
            "Value": {
                "Fn::If": [
                    "ImageIdLatest",
                    {
                        "Ref": "ImageIdLatest"
                    },
                    {
                        "Fn::If": [
                            "ImageIdOverride",
                            {
                                "Ref": "ImageId"
                            },
                            {
                                "Fn::FindInMap": [
                                    {
                                        "Ref": "EnvShort"
                                    },
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "ImageId"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        "InstanceType": {
            "Value": {
                "Fn::If": [
                    "InstanceTypeOverride",
                    {
                        "Ref": "InstanceType"
                    },
                    {
                        "Fn::FindInMap": [
                            {
                                "Ref": "EnvShort"
                            },
                            {
                                "Ref": "AWS::Region"
                            },
                            "InstanceType"
                        ]
                    }
                ]
            }
        },
        "KeyName": {
            "Value": {
                "Fn::If": [
                    "KeyNameOverride",
                    {
                        "Ref": "KeyName"
                    },
                    {
                        "Fn::FindInMap": [
                            {
                                "Ref": "EnvShort"
                            },
                            {
                                "Ref": "AWS::Region"
                            },
                            "KeyName"
                        ]
                    }
                ]
            }
        },
        "LoadBalancerSslCertificate": {
            "Value": {
                "Fn::If": [
                    "LoadBalancerSslCertificateOverride",
                    {
                        "Ref": "LoadBalancerSslCertificate"
                    },
                    true
                ]
            }
        },
        "ScalingPolicyTrackings": {
            "Value": {
                "Fn::Sub": [
                    "Cpu${Statistic}:${Cpu}",
                    {
                        "Cpu": {
                            "Fn::If": [
                                "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValueOverride",
                                {
                                    "Ref": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValue"
                                },
                                60
                            ]
                        },
                        "Statistic": {
                            "Fn::If": [
                                "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationCustomizedMetricSpecificationStatisticOverride",
                                {
                                    "Ref": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationCustomizedMetricSpecificationStatistic"
                                },
                                "Maximum"
                            ]
                        }
                    }
                ]
            }
        },
        "ScheduledActionDown": {
            "Value": {
                "Fn::Sub": [
                    "DesiredSize=${DesiredSize},MinSize=${MinSize},MaxSize=${MaxSize},Recurrence=${Recurrence},StartTime=${StartTime}",
                    {
                        "DesiredSize": {
                            "Fn::If": [
                                "ScheduledActionDownDesiredSizeOverride",
                                {
                                    "Ref": "ScheduledActionDownDesiredSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownDesiredSize"
                                    ]
                                }
                            ]
                        },
                        "MaxSize": {
                            "Fn::If": [
                                "ScheduledActionDownMaxSizeOverride",
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "k"
                            ]
                        },
                        "MinSize": {
                            "Fn::If": [
                                "ScheduledActionDownMinSizeOverride",
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownMinSize"
                                    ]
                                }
                            ]
                        },
                        "Recurrence": {
                            "Fn::If": [
                                "ScheduledActionDownRecurrenceOverride",
                                {
                                    "Ref": "ScheduledActionDownRecurrence"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownRecurrence"
                                    ]
                                }
                            ]
                        },
                        "StartTime": {
                            "Ref": "ScheduledActionDownStartTime"
                        }
                    }
                ]
            }
        },
        "ScheduledActionRotate": {
            "Value": {
                "Fn::Sub": [
                    "DesiredSize=${DesiredSize},MinSize=${MinSize},MaxSize=${MaxSize},Recurrence=${Recurrence},StartTime=${StartTime}",
                    {
                        "DesiredSize": {
                            "Fn::If": [
                                "ScheduledActionRotateDesiredSizeOverride",
                                {
                                    "Ref": "ScheduledActionRotateDesiredSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateDesiredSize"
                                    ]
                                }
                            ]
                        },
                        "MaxSize": {
                            "Fn::If": [
                                "ScheduledActionRotateMaxSizeOverride",
                                {
                                    "Ref": "ScheduledActionRotateMaxSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateMaxSize"
                                    ]
                                }
                            ]
                        },
                        "MinSize": {
                            "Fn::If": [
                                "ScheduledActionRotateMinSizeOverride",
                                {
                                    "Ref": "ScheduledActionRotateMinSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionRotateMinSize"
                                    ]
                                }
                            ]
                        },
                        "Recurrence": {
                            "Fn::If": [
                                "ScheduledActionRotateRecurrenceOverride",
                                {
                                    "Ref": "ScheduledActionRotateRecurrence"
                                },
                                "45 5 * * *"
                            ]
                        },
                        "StartTime": {
                            "Ref": "ScheduledActionRotateStartTime"
                        }
                    }
                ]
            }
        },
        "ScheduledActionUp": {
            "Value": {
                "Fn::Sub": [
                    "DesiredSize=${DesiredSize},MinSize=${MinSize},MaxSize=${MaxSize},Recurrence=${Recurrence},StartTime=${StartTime}",
                    {
                        "DesiredSize": {
                            "Fn::If": [
                                "ScheduledActionUpDesiredSizeOverride",
                                {
                                    "Ref": "ScheduledActionUpDesiredSize"
                                },
                                "CapacityDesired"
                            ]
                        },
                        "MaxSize": {
                            "Fn::If": [
                                "ScheduledActionUpMaxSizeOverride",
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                "CapacityMax"
                            ]
                        },
                        "MinSize": {
                            "Fn::If": [
                                "ScheduledActionUpMinSizeOverride",
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                "CapacityMin"
                            ]
                        },
                        "Recurrence": {
                            "Fn::If": [
                                "ScheduledActionUpRecurrenceOverride",
                                {
                                    "Ref": "ScheduledActionUpRecurrence"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpRecurrence"
                                    ]
                                }
                            ]
                        },
                        "StartTime": {
                            "Ref": "ScheduledActionUpStartTime"
                        }
                    }
                ]
            }
        },
        "SecurityGroups": {
            "Value": {
                "Fn::Sub": [
                    "Rules=${SecurityGroupInstancesRules},${SecurityGroupName0}=${SecurityGroupValue0},${SecurityGroupName1}=${SecurityGroupValue1},${SecurityGroupName2}=${SecurityGroupValue2},${SecurityGroupName3}=${SecurityGroupValue3}",
                    {
                        "SecurityGroupInstancesRules": {
                            "Ref": "SecurityGroupInstancesRules"
                        },
                        "SecurityGroupName0": {
                            "Fn::Select": [
                                0,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName1": {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName2": {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName3": {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupValue0": {
                            "Fn::If": [
                                "SecurityGroup0",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        0,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue1": {
                            "Fn::If": [
                                "SecurityGroup1",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        1,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue2": {
                            "Fn::If": [
                                "SecurityGroup2",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        2,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue3": {
                            "Fn::If": [
                                "SecurityGroup3",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        3,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        }
                    }
                ]
            }
        },
        "StackType": {
            "Value": "ec2"
        },
        "UpdateMode": {
            "Value": {
                "Ref": "UpdateMode"
            }
        },
        "VolumeSize": {
            "Value": {
                "Fn::If": [
                    "VolumeSizeOverride",
                    {
                        "Ref": "VolumeSize"
                    },
                    {
                        "Fn::FindInMap": [
                            {
                                "Ref": "EnvShort"
                            },
                            {
                                "Ref": "AWS::Region"
                            },
                            "VolumeSize"
                        ]
                    }
                ]
            }
        }
    },
    "Parameters": {
        "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout": {
            "Default": "",
            "Description": "ECSDrainInstance ASGLifecycleHook and Lambda HeartbeatTimeout - empty for default based on env/role",
            "Type": "String"
        },
        "AdditionalStorageSize": {
            "AllowedValues": [
                "",
                "0",
                "4",
                "8",
                "16",
                "32",
                "64",
                "128",
                "256",
                "512",
                "1024"
            ],
            "Default": "",
            "Description": "Size in GiB of additional EBS storage - 0 to disable - empty for default",
            "Type": "String"
        },
        "CapacityDesired": {
            "Default": "",
            "Description": "Desired Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CapacityMax": {
            "Default": "",
            "Description": "Max Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CapacityMin": {
            "Default": "",
            "Description": "Min Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CloudFrontWebACLId": {
            "Default": "",
            "Description": "CloudFront WebACLId - empty for default based on env/role",
            "Type": "String"
        },
        "DoNotSignal": {
            "AllowedValues": [
                "False",
                "True"
            ],
            "Default": "False",
            "Description": "Do Not Signal ASG - WARNING need to manually exec cfn-signal!",
            "Type": "String"
        },
        "EfsMounts": {
            "Default": "",
            "Description": "Efs Mounts List",
            "Type": "CommaDelimitedList"
        },
        "Env": {
            "AllowedValues": [
                "dev",
                "stg",
                "prod"
            ],
            "Default": "dev",
            "Description": "Environment",
            "Type": "String"
        },
        "EnvRole": {
            "AllowedPattern": "^[a-zA-Z0-9-_.]*$",
            "Default": "",
            "Description": "Service Role",
            "Type": "String"
        },
        "EnvShort": {
            "AllowedValues": [
                "dev",
                "stg",
                "prd"
            ],
            "Default": "dev",
            "Description": "Environment Short - NEVER CHANGE!",
            "Type": "String"
        },
        "EnvStackVersion": {
            "Default": "1",
            "Description": "Stack version, if changed with UpdateMode=Cfn triggers cfn-hup",
            "Type": "String"
        },
        "GPUInstance": {
            "AllowedValues": [
                "True",
                "None"
            ],
            "Default": "None",
            "Description": "Install Coda and nvidia-docker2",
            "Type": "String"
        },
        "HealthCheckGracePeriod": {
            "Default": "",
            "Description": "How long to wait before ASG check instance health - empty for default based on env/role",
            "Type": "String"
        },
        "ImageId": {
            "Default": "",
            "Description": "AMI ID - empty for default based on env/role/region",
            "Type": "String"
        },
        "ImageIdLatest": {
            "AllowedValues": [
                "/aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id",
                "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
            ],
            "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id",
            "Description": "Latest ecs ami available from SSM",
            "Type": "AWS::SSM::Parameter::Value<String>"
        },
        "InstanceType": {
            "AllowedValues": [
                "default",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "t3.nano",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r5.large",
                "r5.xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "g2.2xlarge",
                "g3s.xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "default",
            "Description": "InstanceType - default for default based on env/role",
            "Type": "String"
        },
        "KeyName": {
            "Default": "",
            "Description": "EC2 SSH Key - empty for default",
            "Type": "String"
        },
        "ListenerLoadBalancerHttpPort": {
            "Default": "",
            "Description": "Http Port where Load Balancer listen - empty for default based on env/role",
            "Type": "String"
        },
        "ListenerLoadBalancerHttpsPort": {
            "Default": "",
            "Description": "Http Port where Load Balancer listen - empty for default based on env/role",
            "Type": "String"
        },
        "LoadBalancerSslCertificate": {
            "Default": "",
            "Description": "Load Balancer External Ssl Certificate - None to disable - empty for default based on env/role",
            "Type": "String"
        },
        "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationCustomizedMetricSpecificationStatistic": {
            "Default": "",
            "Description": "Tracking ASCustom Statistic - 0 to disable - empty for default based on env/role",
            "Type": "String"
        },
        "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValue": {
            "Default": "",
            "Description": "Tracking ASCustom Value - 0 to disable - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownDesiredSize": {
            "Default": "",
            "Description": "ScheduledActionDownDesired Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownMaxSize": {
            "Default": "",
            "Description": "ScheduledActionDownMax Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownMinSize": {
            "Default": "",
            "Description": "ScheduledActionDownMin Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownRecurrence": {
            "Default": "",
            "Description": "ScheduledActionDownRecurrence - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownStartTime": {
            "Default": "",
            "Description": "ScheduledActionDownStartTime - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionRotateDesiredSize": {
            "Default": "",
            "Description": "ScheduledActionRotateDesired Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionRotateMaxSize": {
            "Default": "",
            "Description": "ScheduledActionRotateMax Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionRotateMinSize": {
            "Default": "",
            "Description": "ScheduledActionRotateMin Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionRotateRecurrence": {
            "Default": "",
            "Description": "ScheduledActionRotateRecurrence - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionRotateStartTime": {
            "Default": "",
            "Description": "ScheduledActionRotateStartTime - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpDesiredSize": {
            "Default": "",
            "Description": "ScheduledActionUpDesired Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpMaxSize": {
            "Default": "",
            "Description": "ScheduledActionUpMax Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpMinSize": {
            "Default": "",
            "Description": "ScheduledActionUpMin Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpRecurrence": {
            "Default": "",
            "Description": "ScheduledActionUpRecurrence - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpStartTime": {
            "Default": "",
            "Description": "ScheduledActionUpStartTime - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "SecurityGroups": {
            "AllowedPattern": "^(\\w*,\\w*){3}$",
            "Default": ",,,",
            "Description": "SecurityGroups List Extra - ,,, for default based on env/role",
            "Type": "String"
        },
        "SpotAuto": {
            "AllowedValues": [
                "",
                "True",
                "None"
            ],
            "Default": "",
            "Description": "Set ASG TAG for autospotting https://github.com/AutoSpotting/AutoSpotting - empty for default based on env/role",
            "Type": "String"
        },
        "SpotAutoMinOnDemandNumber": {
            "Default": "",
            "Description": "Set ASG TAG for autospotting minimum on deman instance to be keept - empty for default based on env/role - None to disable",
            "Type": "String"
        },
        "SpotPrice": {
            "Default": "",
            "Description": "Maximum Spot Price of ASG - empty for default based on env/role - 0 to disable",
            "Type": "String"
        },
        "UpdateMode": {
            "Default": "None",
            "Description": "How to update Instances",
            "Type": "String"
        },
        "VolumeSize": {
            "Default": "",
            "Description": "Size of HD in GB - empty for default based on env/role",
            "Type": "String"
        }
    },
    "Resources": {
        "ASGLifecycleHookECSDrainInstance": {
            "DependsOn": "IAMPolicyASGLifecycleHookECSDrainInstance",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "DefaultResult": "ABANDON",
                "HeartbeatTimeout": {
                    "Fn::If": [
                        "ASGLifecycleHookECSDrainInstanceHeartbeatTimeoutOverride",
                        {
                            "Ref": "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "ASGLifecycleHookECSDrainInstanceHeartbeatTimeout"
                            ]
                        }
                    ]
                },
                "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                "NotificationTargetARN": {
                    "Fn::ImportValue": "SNSTopicECSDrainInstance"
                },
                "RoleARN": {
                    "Fn::GetAtt": [
                        "RoleASGLifecycleHookECSDrainInstance",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::AutoScaling::LifecycleHook"
        },
        "AutoScalingGroup": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Fn::If": [
                            "CapacityDesiredOverride",
                            {
                                "Ref": "CapacityDesired"
                            },
                            {
                                "Fn::FindInMap": [
                                    {
                                        "Ref": "EnvShort"
                                    },
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "CapacityDesired"
                                ]
                            }
                        ]
                    },
                    "Timeout": "PT15M"
                }
            },
            "Properties": {
                "AvailabilityZones": {
                    "Fn::GetAZs": ""
                },
                "DesiredCapacity": {
                    "Fn::If": [
                        "CapacityDesiredOverride",
                        {
                            "Ref": "CapacityDesired"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                },
                "HealthCheckGracePeriod": {
                    "Fn::If": [
                        "HealthCheckGracePeriodOverride",
                        {
                            "Ref": "HealthCheckGracePeriod"
                        },
                        600
                    ]
                },
                "HealthCheckType": "EC2",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "LoadBalancerNames": [],
                "MaxSize": {
                    "Fn::If": [
                        "CapacityMaxOverride",
                        {
                            "Ref": "CapacityMax"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                "MetricsCollection": [
                    {
                        "Granularity": "1Minute"
                    }
                ],
                "MinSize": {
                    "Fn::If": [
                        "CapacityMinOverride",
                        {
                            "Ref": "CapacityMin"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                "NotificationConfigurations": [
                    {
                        "NotificationTypes": [
                            "autoscaling:EC2_INSTANCE_LAUNCH",
                            "autoscaling:EC2_INSTANCE_TERMINATE"
                        ],
                        "TopicARN": {
                            "Fn::ImportValue": "SNSTopicASGNotification"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Ref": "EnvRole"
                        }
                    },
                    {
                        "Key": "EnvStackName",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Fn::If": [
                            "SpotAuto",
                            {
                                "Key": "spot-enabled",
                                "PropagateAtLaunch": true,
                                "Value": "true"
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "SpotAutoMinOnDemandNumber",
                            {
                                "Key": "autospotting_min_on_demand_number",
                                "PropagateAtLaunch": true,
                                "Value": {
                                    "Fn::If": [
                                        "SpotAutoMinOnDemandNumberOverride",
                                        {
                                            "Ref": "SpotAutoMinOnDemandNumber"
                                        },
                                        "None"
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "TargetGroupARNs": [],
                "TerminationPolicies": [
                    "OldestInstance"
                ],
                "VPCZoneIdentifier": {
                    "Fn::Split": [
                        ",",
                        {
                            "Fn::ImportValue": "SubnetsPrivate"
                        }
                    ]
                }
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "Fn::If": [
                        "WillReplace",
                        {
                            "WillReplace": "true"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AutoScalingRollingUpdate": {
                    "Fn::If": [
                        "RollingUpdate",
                        {
                            "MaxBatchSize": 1,
                            "MinInstancesInService": {
                                "Fn::If": [
                                    "CapacityDesiredOverride",
                                    {
                                        "Ref": "CapacityDesired"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            {
                                                "Ref": "EnvShort"
                                            },
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "CapacityDesired"
                                        ]
                                    }
                                ]
                            },
                            "MinSuccessfulInstancesPercent": 100,
                            "PauseTime": "PT20M",
                            "SuspendProcesses": [
                                "HealthCheck",
                                "ReplaceUnhealthy",
                                "AlarmNotification",
                                "ScheduledActions"
                            ],
                            "WaitOnResourceSignals": "true"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AutoScalingScheduledAction": {
                    "IgnoreUnmodifiedGroupSizeProperties": "true"
                }
            }
        },
        "CertificateLoadBalancerAdHocExternal": {
            "Condition": "LoadBalancerSslCertificateAdHoc",
            "Properties": {
                "DomainName": {
                    "Fn::Sub": "${AWS::StackName}.${EnvRole}${AWS::Region}.${EnvShort}.numenor.arda"
                },
                "DomainValidationOptions": [
                    {
                        "DomainName": {
                            "Fn::Sub": "${AWS::StackName}.${EnvRole}${AWS::Region}.${EnvShort}.numenor.arda"
                        },
                        "ValidationDomain": {
                            "Fn::Sub": "${EnvShort}.numenor.arda"
                        }
                    },
                    {
                        "DomainName": {
                            "Fn::Sub": "${EnvRole}.${EnvShort}.numenor.arda"
                        },
                        "ValidationDomain": {
                            "Fn::Sub": "${EnvShort}.numenor.arda"
                        }
                    },
                    {
                        "DomainName": {
                            "Fn::Sub": "${EnvRole}.${AWS::Region}.${EnvShort}.numenor.arda"
                        },
                        "ValidationDomain": {
                            "Fn::Sub": "${EnvShort}.numenor.arda"
                        }
                    }
                ],
                "SubjectAlternativeNames": [
                    {
                        "Fn::Sub": "${EnvRole}.${EnvShort}.numenor.arda"
                    },
                    {
                        "Fn::Sub": "${EnvRole}.${AWS::Region}.${EnvShort}.numenor.arda"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "LoadBalancerAdHocExternal"
                    }
                ],
                "ValidationMethod": "EMAIL"
            },
            "Type": "AWS::CertificateManager::Certificate"
        },
        "Cluster": {
            "Type": "AWS::ECS::Cluster"
        },
        "IAMPolicyASGLifecycleHookECSDrainInstance": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sns:Publish",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::ImportValue": "SNSTopicECSDrainInstance"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ASGLifecycleHookECSDrainInstance",
                "Roles": [
                    {
                        "Ref": "RoleASGLifecycleHookECSDrainInstance"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "IAMPolicyCloudFormation": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "cloudformation:DescribeStackResource",
                                "cloudformation:SignalResource"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:cloudformation:*:*:stack/${AWS::StackName}/*"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "CloudFormation",
                "Roles": [
                    {
                        "Ref": "RoleInstance"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "IAMPolicyEcs": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ecs:CreateCluster",
                                "ecs:DeregisterContainerInstance",
                                "ecs:DiscoverPollEndpoint",
                                "ecs:Poll",
                                "ecs:RegisterContainerInstance",
                                "ecs:StartTelemetrySession",
                                "ecs:Submit*",
                                "ecs:UpdateContainerInstancesState",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:BatchGetImage",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:GetAuthorizationToken"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "Ecs",
                "Roles": [
                    {
                        "Ref": "RoleInstance"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "IAMPolicyParameterStore": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "kms:Decrypt",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::ImportValue": "KeyParameterStore"
                            }
                        },
                        {
                            "Action": "ssm:DescribeParameters",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:*"
                            }
                        },
                        {
                            "Action": "ssm:GetParameters",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvRole}/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/${EnvRole}/*"
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ParameterStore",
                "Roles": [
                    {
                        "Ref": "RoleInstance"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "IAMPolicySSM": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ssm:DescribeAssociation",
                                "ssm:GetDeployablePatchSnapshotForInstance",
                                "ssm:GetDocument",
                                "ssm:GetManifest",
                                "ssm:GetParameters",
                                "ssm:ListAssociations",
                                "ssm:ListInstanceAssociations",
                                "ssm:PutInventory",
                                "ssm:PutComplianceItems",
                                "ssm:PutConfigurePackageResult",
                                "ssm:UpdateAssociationStatus",
                                "ssm:UpdateInstanceAssociationStatus",
                                "ssm:UpdateInstanceInformation"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "ssmmessages:CreateControlChannel",
                                "ssmmessages:CreateDataChannel",
                                "ssmmessages:OpenControlChannel",
                                "ssmmessages:OpenDataChannel"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "ec2messages:AcknowledgeMessage",
                                "ec2messages:DeleteMessage",
                                "ec2messages:FailMessage",
                                "ec2messages:GetEndpoint",
                                "ec2messages:GetMessages",
                                "ec2messages:SendReply"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "cloudwatch:PutMetricData",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ec2:DescribeInstanceStatus",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "ds:CreateComputer",
                                "ds:DescribeDirectories"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:DescribeLogGroups",
                                "logs:DescribeLogStreams",
                                "logs:PutLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:s3:::aws-ssm-${AWS::Region}/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:s3:::amazon-ssm-${AWS::Region}/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:s3:::amazon-ssm-packages-${AWS::Region}/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:s3:::${AWS::Region}-birdwatcher-prod/*"
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "SSM",
                "Roles": [
                    {
                        "Ref": "RoleInstance"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "InstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "RoleInstance"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "LaunchConfiguration": {
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "CfnS3Auth": {
                        "buckets": [
                            {
                                "Fn::Sub": "${AWS::Region}-arda-numenor-app-repository"
                            },
                            {
                                "Fn::Sub": "${AWS::Region}-arda-numenor-app-data"
                            }
                        ],
                        "roleName": {
                            "Ref": "RoleInstance"
                        },
                        "type": "S3"
                    }
                },
                "AWS::CloudFormation::Init": {
                    "PACKAGES": {
                        "files": {
                            "/etc/profile.d/ibox_env_ext.sh": {
                                "Ref": "AWS::NoValue"
                            },
                            "/etc/systemd/system/spot-instance-drainer.service": {
                                "Fn::If": [
                                    "SpotPrice",
                                    {
                                        "content": {
                                            "Fn::Join": [
                                                "\n",
                                                [
                                                    "[Unit]",
                                                    "Description=Spot Instance Drainer",
                                                    "[Service]",
                                                    "Type=simple",
                                                    "EnvironmentFile=-/etc/profile.d/ibox_env_ext.sh",
                                                    "ExecStart=/usr/local/bin/spot-instance-drainer",
                                                    "ExecStop=/usr/bin/killall spot-instance-drainer",
                                                    "Restart=on-failure",
                                                    "[Install]",
                                                    "WantedBy=multi-user.target"
                                                ]
                                            ]
                                        }
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "/usr/local/bin/spot-instance-drainer": {
                                "Fn::If": [
                                    "SpotPrice",
                                    {
                                        "mode": 755,
                                        "source": {
                                            "Fn::Sub": "https://${AWS::Region}-arda-numenor-app-repository.s3-${AWS::Region}.amazonaws.com/ibox-tools/spot-instance-drainer"
                                        }
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        },
                        "packages": {
                            "yum": {
                                "automake": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "dkms-nvidia": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "gcc": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "gcc-c++": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "kernel-devel": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "make": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "nfs-utils": [],
                                "nvidia-docker2": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "nvidia-driver-cuda": {
                                    "Fn::If": [
                                        "GPUInstance",
                                        [],
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "REPOSITORIES": {
                        "commands": {
                            "Fn::If": [
                                "GPUInstance",
                                {
                                    "10-epel-repo": {
                                        "command": "amazon-linux-extras install -y epel",
                                        "test": "! test -e /etc/yum.repos.d/epel.repo"
                                    },
                                    "nvidia-docker": {
                                        "command": "curl -s -L https://nvidia.github.io/nvidia-docker/amzn2/nvidia-docker.repo | tee /etc/yum.repos.d/nvidia-docker.repo",
                                        "test": "test ! -e /etc/yum.repos.d/nvidia-docker.repo"
                                    }
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        "files": {
                            "Fn::If": [
                                "GPUInstance",
                                {
                                    "/etc/yum.repos.d/epel-nvidia.repo": {
                                        "content": {
                                            "Fn::Join": [
                                                "\n",
                                                [
                                                    "[epel-nvidia]",
                                                    "name=negativo17 - Nvidia",
                                                    "baseurl=https://negativo17.org/repos/nvidia/epel-7/$basearch/",
                                                    "enabled=1",
                                                    "skip_if_unavailable=1",
                                                    "gpgcheck=1",
                                                    "gpgkey=https://negativo17.org/repos/RPM-GPG-KEY-slaanesh",
                                                    "enabled_metadata=1",
                                                    "metadata_expire=6h",
                                                    "type=rpm-md",
                                                    "repo_gpgcheck=0"
                                                ]
                                            ]
                                        }
                                    }
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    },
                    "SERVICES": {
                        "commands": {
                            "01-kern-modules": {
                                "Fn::If": [
                                    "GPUInstance",
                                    {
                                        "command": "rmmod nvidia_modeset;rmmod nvidia_uvm;rmmod nvidia;modprobe nvidia;modprobe nvidia_uvm;true"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "02-restart-docker": {
                                "Fn::If": [
                                    "GPUInstance",
                                    {
                                        "command": "pkill -SIGHUP dockerd"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "03-reload-systemd": {
                                "Fn::If": [
                                    "SpotPrice",
                                    {
                                        "command": "systemctl daemon-reload"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        },
                        "files": {
                            "/etc/docker/daemon.json": {
                                "Fn::If": [
                                    "GPUInstance",
                                    {
                                        "content": {
                                            "Fn::Join": [
                                                "\n",
                                                [
                                                    "{",
                                                    "  \"default-runtime\": \"nvidia\",",
                                                    "  \"runtimes\": {",
                                                    "    \"nvidia\": {",
                                                    "      \"path\": \"/usr/bin/nvidia-container-runtime\",",
                                                    "      \"runtimeArgs\": []",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        }
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "/etc/ecs/ecs.config": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            {
                                                "Fn::Sub": "ECS_CLUSTER=${Cluster}"
                                            },
                                            {
                                                "Fn::If": [
                                                    "GPUInstance",
                                                    "ECS_DISABLE_PRIVILEGED=false",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "Fn::If": [
                                "SpotPrice",
                                {
                                    "sysvinit": {
                                        "spot-instance-drainer": {
                                            "enabled": "false",
                                            "ensureRunning": "true"
                                        }
                                    }
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    },
                    "SETUP": {
                        "commands": {
                            "01_disk": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "n=0\n",
                                            "for disk in /dev/xvd[b-d]; do\n",
                                            "  [ -b \"$disk\" ] || continue\n",
                                            "  file -s \"$disk\" | grep -q \"ext[34] filesystem\" || ",
                                            "  { mkfs.ext4 $disk || continue; }\n",
                                            "  mkdir -p /media/ephemeral${n} && ",
                                            "  mount $disk /media/ephemeral${n}\n",
                                            "  n=$(($n+1))\n",
                                            "done"
                                        ]
                                    ]
                                }
                            },
                            "02_disk_additional": {
                                "Fn::If": [
                                    "AdditionalStorageMount",
                                    {
                                        "command": {
                                            "Fn::Sub": [
                                                "file -s ${AdditionalStorageName}1 | grep -q \"ext[34] filesystem\" || { parted -s ${AdditionalStorageName} mklabel gpt && parted -s ${AdditionalStorageName} mkpart primary ext2 1 ${AdditionalStorageSize}G && mkfs.ext4 ${AdditionalStorageName}1 || continue; }\nmkdir -p /data && mount ${AdditionalStorageName}1 /data",
                                                {
                                                    "AdditionalStorageName": "/dev/xvdx",
                                                    "AdditionalStorageSize": {
                                                        "Fn::If": [
                                                            "AdditionalStorageSizeOverride",
                                                            {
                                                                "Ref": "AdditionalStorageSize"
                                                            },
                                                            0
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "03_efs_mounts": {
                                "Fn::If": [
                                    "EfsMounts",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "for mounts in ",
                                                    {
                                                        "Fn::Join": [
                                                            " ",
                                                            {
                                                                "Ref": "EfsMounts"
                                                            }
                                                        ]
                                                    },
                                                    ";do\n",
                                                    "  mkdir -p \"/media/${mounts}\"\n",
                                                    "  mountpoint -q \"/media/${mounts}\" ||",
                                                    "    mount -t nfs4 -o nfsvers=4,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ",
                                                    "    efs-${mounts}.",
                                                    "internal.numenor.arda",
                                                    ":/ ",
                                                    "    /media/${mounts}\n",
                                                    "done"
                                                ]
                                            ]
                                        }
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "04_rmdir_tmp_ibox": {
                                "command": "rm -fr /tmp/ibox"
                            }
                        },
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "role=",
                                            {
                                                "Ref": "RoleInstance"
                                            },
                                            "\n",
                                            "interval=5\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000400",
                                "owner": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.add, post.update\n",
                                            "path=Resources.LaunchConfiguration.Metadata.CloudFormationInitVersion\n",
                                            "action=/opt/aws/bin/cfn-init -v",
                                            " --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            " --role ",
                                            {
                                                "Ref": "RoleInstance"
                                            },
                                            " --resource LaunchConfiguration",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                }
                            },
                            "/etc/profile.d/ibox_env.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#setup ibox environment variables\n",
                                            "export Env=",
                                            {
                                                "Ref": "Env"
                                            },
                                            "\n",
                                            "export EnvAbbr=",
                                            {
                                                "Ref": "EnvShort"
                                            },
                                            "\n",
                                            "export EnvRegion=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "export EnvAccountId=",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "\n",
                                            "export EnvRole=",
                                            {
                                                "Ref": "EnvRole"
                                            },
                                            "\n",
                                            "export EnvBrand=",
                                            "numenor.arda",
                                            "\n",
                                            "export EnvStackName=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "/usr/local/bin/chamber": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": {
                                    "Fn::Sub": "https://${AWS::Region}-arda-numenor-app-repository.s3.${AWS::Region}.amazonaws.com/ibox-tools/chamber"
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "false",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "configSets": {
                        "buildami": [
                            "REPOSITORIES",
                            "PACKAGES"
                        ],
                        "buildamifull": [
                            "REPOSITORIES",
                            "PACKAGES",
                            "SETUP"
                        ],
                        "default": [
                            "REPOSITORIES",
                            "PACKAGES",
                            "SETUP",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            "SERVICES",
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                }
            },
            "Properties": {
                "AssociatePublicIpAddress": "false",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::If": [
                                    "VolumeSizeOverride",
                                    {
                                        "Ref": "VolumeSize"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            {
                                                "Ref": "EnvShort"
                                            },
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "VolumeSize"
                                        ]
                                    }
                                ]
                            },
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "Fn::If": [
                            "AdditionalStorage",
                            {
                                "DeviceName": "/dev/xvdx",
                                "Ebs": {
                                    "VolumeSize": {
                                        "Fn::If": [
                                            "AdditionalStorageSizeOverride",
                                            {
                                                "Ref": "AdditionalStorageSize"
                                            },
                                            0
                                        ]
                                    },
                                    "VolumeType": "gp2"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "InstaceEphemeral0",
                            {
                                "DeviceName": "/dev/xvdb",
                                "VirtualName": "ephemeral0"
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "InstaceEphemeral1",
                            {
                                "DeviceName": "/dev/xvdc",
                                "VirtualName": "ephemeral1"
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "InstaceEphemeral2",
                            {
                                "DeviceName": "/dev/xvdd",
                                "VirtualName": "ephemeral2"
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "ImageId": {
                    "Fn::If": [
                        "ImageIdLatest",
                        {
                            "Ref": "ImageIdLatest"
                        },
                        {
                            "Fn::If": [
                                "ImageIdOverride",
                                {
                                    "Ref": "ImageId"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ImageId"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "InstanceMonitoring": "false",
                "InstanceType": {
                    "Fn::If": [
                        "InstanceTypeOverride",
                        {
                            "Ref": "InstanceType"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "InstanceType"
                            ]
                        }
                    ]
                },
                "KeyName": {
                    "Fn::If": [
                        "KeyNameOverride",
                        {
                            "Ref": "KeyName"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "KeyName"
                            ]
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                        "Fn::GetAtt": [
                            "SecurityGroupInstancesRules",
                            "GroupId"
                        ]
                    },
                    {
                        "Fn::If": [
                            "SecurityGroup0",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": [
                                        "SecurityGroup${ImportName}",
                                        {
                                            "ImportName": {
                                                "Fn::Select": [
                                                    0,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Fn::If": [
                                                                    "SecurityGroupsOverride",
                                                                    {
                                                                        "Ref": "SecurityGroups"
                                                                    },
                                                                    "BaseInstance,None,None,None"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "SecurityGroup1",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": [
                                        "SecurityGroup${ImportName}",
                                        {
                                            "ImportName": {
                                                "Fn::Select": [
                                                    1,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Fn::If": [
                                                                    "SecurityGroupsOverride",
                                                                    {
                                                                        "Ref": "SecurityGroups"
                                                                    },
                                                                    "BaseInstance,None,None,None"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "SecurityGroup2",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": [
                                        "SecurityGroup${ImportName}",
                                        {
                                            "ImportName": {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Fn::If": [
                                                                    "SecurityGroupsOverride",
                                                                    {
                                                                        "Ref": "SecurityGroups"
                                                                    },
                                                                    "BaseInstance,None,None,None"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "SecurityGroup3",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": [
                                        "SecurityGroup${ImportName}",
                                        {
                                            "ImportName": {
                                                "Fn::Select": [
                                                    3,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Fn::If": [
                                                                    "SecurityGroupsOverride",
                                                                    {
                                                                        "Ref": "SecurityGroups"
                                                                    },
                                                                    "BaseInstance,None,None,None"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "SpotPrice": {
                    "Fn::If": [
                        "SpotPrice",
                        {
                            "Fn::If": [
                                "SpotPriceOverride",
                                {
                                    "Ref": "SpotPrice"
                                },
                                0
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "PATH=/opt/aws/bin:$PATH\n",
                                "export BASH_ENV=/etc/profile.d/ibox_env.sh\n",
                                "export ENV=$BASH_ENV\n",
                                "yum -C list installed aws-cfn-bootstrap || yum install -y aws-cfn-bootstrap\n",
                                {
                                    "Fn::Sub": ""
                                },
                                "cfn-init -v",
                                " --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --role ",
                                {
                                    "Ref": "RoleInstance"
                                },
                                " --resource LaunchConfiguration",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                {
                                    "Fn::If": [
                                        "DoNotSignal",
                                        {
                                            "Ref": "AWS::NoValue"
                                        },
                                        {
                                            "Fn::Sub": "cfn-signal -e $? --stack ${AWS::StackName} --role ${RoleInstance} --resource AutoScalingGroup --region ${AWS::Region}\n"
                                        }
                                    ]
                                },
                                "rm /var/lib/cloud/instance/sem/config_scripts_user\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "RoleASGLifecycleHookECSDrainInstance": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "autoscaling.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "RoleInstance": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::ImportValue": "IAMPolicyBaseInstance"
                    }
                ],
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "ScalingPolicyTrackingsASCustom": {
            "Condition": "ScalingPolicyTrackingsASCustom",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "EstimatedInstanceWarmup": 60,
                "PolicyType": "TargetTrackingScaling",
                "TargetTrackingConfiguration": {
                    "CustomizedMetricSpecification": {
                        "Dimensions": [
                            {
                                "Name": "AutoScalingGroupName",
                                "Value": {
                                    "Ref": "AutoScalingGroup"
                                }
                            }
                        ],
                        "MetricName": "CPUUtilization",
                        "Namespace": "AWS/EC2",
                        "Statistic": {
                            "Fn::If": [
                                "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationCustomizedMetricSpecificationStatisticOverride",
                                {
                                    "Ref": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationCustomizedMetricSpecificationStatistic"
                                },
                                "Maximum"
                            ]
                        },
                        "Unit": "Percent"
                    },
                    "TargetValue": {
                        "Fn::If": [
                            "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValueOverride",
                            {
                                "Ref": "ScalingPolicyTrackingsASCustomTargetTrackingConfigurationTargetValue"
                            },
                            60
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "ScheduledActionDown": {
            "Condition": "ScheduledActionDown",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "DesiredCapacity": {
                    "Fn::If": [
                        "ScheduledActionDownCapacityDesiredSize",
                        {
                            "Fn::If": [
                                "CapacityDesiredOverride",
                                {
                                    "Ref": "CapacityDesired"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityDesired"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionDownKeepDesiredSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionDownDesiredSizeOverride",
                                        {
                                            "Ref": "ScheduledActionDownDesiredSize"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionDownDesiredSize"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "MaxSize": {
                    "Fn::If": [
                        "ScheduledActionDownCapacityMaxSize",
                        {
                            "Fn::If": [
                                "CapacityMaxOverride",
                                {
                                    "Ref": "CapacityMax"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMax"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionDownKeepMaxSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionDownMaxSizeOverride",
                                        {
                                            "Ref": "ScheduledActionDownMaxSize"
                                        },
                                        "k"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "MinSize": {
                    "Fn::If": [
                        "ScheduledActionDownCapacityMinSize",
                        {
                            "Fn::If": [
                                "CapacityMinOverride",
                                {
                                    "Ref": "CapacityMin"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMin"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionDownKeepMinSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionDownMinSizeOverride",
                                        {
                                            "Ref": "ScheduledActionDownMinSize"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionDownMinSize"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Recurrence": {
                    "Fn::If": [
                        "ScheduledActionDownRecurrenceOverride",
                        {
                            "Ref": "ScheduledActionDownRecurrence"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "ScheduledActionDownRecurrence"
                            ]
                        }
                    ]
                },
                "StartTime": {
                    "Fn::If": [
                        "ScheduledActionDownStartTimeOverride",
                        {
                            "Ref": "ScheduledActionDownStartTime"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                }
            },
            "Type": "AWS::AutoScaling::ScheduledAction"
        },
        "ScheduledActionRotate": {
            "Condition": "ScheduledActionRotate",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "DesiredCapacity": {
                    "Fn::If": [
                        "ScheduledActionRotateCapacityDesiredSize",
                        {
                            "Fn::If": [
                                "CapacityDesiredOverride",
                                {
                                    "Ref": "CapacityDesired"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityDesired"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionRotateKeepDesiredSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionRotateDesiredSizeOverride",
                                        {
                                            "Ref": "ScheduledActionRotateDesiredSize"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionRotateDesiredSize"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "MaxSize": {
                    "Fn::If": [
                        "ScheduledActionRotateCapacityMaxSize",
                        {
                            "Fn::If": [
                                "CapacityMaxOverride",
                                {
                                    "Ref": "CapacityMax"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMax"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionRotateKeepMaxSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionRotateMaxSizeOverride",
                                        {
                                            "Ref": "ScheduledActionRotateMaxSize"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionRotateMaxSize"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "MinSize": {
                    "Fn::If": [
                        "ScheduledActionRotateCapacityMinSize",
                        {
                            "Fn::If": [
                                "CapacityMinOverride",
                                {
                                    "Ref": "CapacityMin"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMin"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionRotateKeepMinSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionRotateMinSizeOverride",
                                        {
                                            "Ref": "ScheduledActionRotateMinSize"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionRotateMinSize"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Recurrence": {
                    "Fn::If": [
                        "ScheduledActionRotateRecurrenceOverride",
                        {
                            "Ref": "ScheduledActionRotateRecurrence"
                        },
                        "45 5 * * *"
                    ]
                },
                "StartTime": {
                    "Fn::If": [
                        "ScheduledActionRotateStartTimeOverride",
                        {
                            "Ref": "ScheduledActionRotateStartTime"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                }
            },
            "Type": "AWS::AutoScaling::ScheduledAction"
        },
        "ScheduledActionUp": {
            "Condition": "ScheduledActionUp",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "DesiredCapacity": {
                    "Fn::If": [
                        "ScheduledActionUpCapacityDesiredSize",
                        {
                            "Fn::If": [
                                "CapacityDesiredOverride",
                                {
                                    "Ref": "CapacityDesired"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityDesired"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionUpKeepDesiredSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionUpDesiredSizeOverride",
                                        {
                                            "Ref": "ScheduledActionUpDesiredSize"
                                        },
                                        "CapacityDesired"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "MaxSize": {
                    "Fn::If": [
                        "ScheduledActionUpCapacityMaxSize",
                        {
                            "Fn::If": [
                                "CapacityMaxOverride",
                                {
                                    "Ref": "CapacityMax"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMax"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionUpKeepMaxSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionUpMaxSizeOverride",
                                        {
                                            "Ref": "ScheduledActionUpMaxSize"
                                        },
                                        "CapacityMax"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "MinSize": {
                    "Fn::If": [
                        "ScheduledActionUpCapacityMinSize",
                        {
                            "Fn::If": [
                                "CapacityMinOverride",
                                {
                                    "Ref": "CapacityMin"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMin"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "ScheduledActionUpKeepMinSize",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Fn::If": [
                                        "ScheduledActionUpMinSizeOverride",
                                        {
                                            "Ref": "ScheduledActionUpMinSize"
                                        },
                                        "CapacityMin"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Recurrence": {
                    "Fn::If": [
                        "ScheduledActionUpRecurrenceOverride",
                        {
                            "Ref": "ScheduledActionUpRecurrence"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "ScheduledActionUpRecurrence"
                            ]
                        }
                    ]
                },
                "StartTime": {
                    "Fn::If": [
                        "ScheduledActionUpStartTimeOverride",
                        {
                            "Ref": "ScheduledActionUpStartTime"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                }
            },
            "Type": "AWS::AutoScaling::ScheduledAction"
        },
        "SecurityGroupIngressContainerInstanceExternal": {
            "Properties": {
                "FromPort": 32768,
                "GroupId": {
                    "Fn::GetAtt": [
                        "SecurityGroupInstancesRules",
                        "GroupId"
                    ]
                },
                "IpProtocol": "tcp",
                "SourceSecurityGroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "ToPort": 60999
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressContainerInstanceInternal": {
            "Properties": {
                "FromPort": 32768,
                "GroupId": {
                    "Fn::GetAtt": [
                        "SecurityGroupInstancesRules",
                        "GroupId"
                    ]
                },
                "IpProtocol": "tcp",
                "SourceSecurityGroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationInternal"
                },
                "ToPort": 60999
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressEcsHttpExternal": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": 80,
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": 80
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressEcsHttpInternal": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": 80,
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationInternal"
                },
                "IpProtocol": "tcp",
                "ToPort": 80
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressEcsHttpsExternal": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": 443,
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressEcsHttpsInternal": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": 443,
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationInternal"
                },
                "IpProtocol": "tcp",
                "ToPort": 443
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupInstancesRules": {
            "Properties": {
                "GroupDescription": "Enable Access from LoadBalancer to Instances and between Instances",
                "VpcId": {
                    "Fn::ImportValue": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    }
}
