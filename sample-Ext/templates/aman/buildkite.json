{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {
        "CapacityDesiredOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityDesired"
                        },
                        ""
                    ]
                }
            ]
        },
        "CapacityMaxOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityMax"
                        },
                        ""
                    ]
                }
            ]
        },
        "CapacityMinOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityMin"
                        },
                        ""
                    ]
                }
            ]
        },
        "CloudFrontWebACLId": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CloudFrontWebACLIdOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "CloudFrontWebACLId"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CloudFrontWebACLIdOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontWebACLIdOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CloudFrontWebACLId"
                        },
                        ""
                    ]
                }
            ]
        },
        "ClusterStackOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ClusterStack"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1CpuOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1Cpu"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1EnvsAWSDEFAULTREGIONValueOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1EnvsAWSDEFAULTREGIONValue"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1MemoryOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1Memory"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1MemoryReservationOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1MemoryReservation"
                        },
                        ""
                    ]
                }
            ]
        },
        "CpuOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Cpu"
                        },
                        ""
                    ]
                }
            ]
        },
        "CpuTask": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CpuOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "Cpu"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CpuOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "DeploymentConfigurationMaximumPercentOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DeploymentConfigurationMaximumPercent"
                        },
                        ""
                    ]
                }
            ]
        },
        "DeploymentConfigurationMinimumHealthyPercentOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DeploymentConfigurationMinimumHealthyPercent"
                        },
                        ""
                    ]
                }
            ]
        },
        "DockerLabelLastUpdateOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DockerLabelLastUpdate"
                        },
                        ""
                    ]
                }
            ]
        },
        "LaunchTypeFarGate": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "LaunchTypeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "LaunchType"
                                },
                                "FARGATE"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "LaunchTypeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "EC2",
                                "FARGATE"
                            ]
                        }
                    ]
                }
            ]
        },
        "LaunchTypeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LaunchType"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpPort": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ListenerLoadBalancerHttpPortOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ListenerLoadBalancerHttpPort"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ListenerLoadBalancerHttpPortOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        80,
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpPortOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpsPort": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ListenerLoadBalancerHttpsPortOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ListenerLoadBalancerHttpsPort"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ListenerLoadBalancerHttpsPortOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        443,
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpsPortOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        ""
                    ]
                }
            ]
        },
        "LoadBalancerApplicationStackOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LoadBalancerApplicationStack"
                        },
                        ""
                    ]
                }
            ]
        },
        "LoadBalancerSslCertificateAdHoc": {
            "Fn::And": [
                {
                    "Condition": "ListenerLoadBalancerHttpsPort"
                },
                {
                    "Fn::Equals": [
                        true,
                        "None"
                    ]
                }
            ]
        },
        "LoadBalancerSslCertificateOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LoadBalancerSslCertificate"
                        },
                        ""
                    ]
                }
            ]
        },
        "LogConfiguration": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        "awslogs",
                        "None"
                    ]
                }
            ]
        },
        "LogDriverOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LogDriver"
                        },
                        ""
                    ]
                }
            ]
        },
        "MemoryOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Memory"
                        },
                        ""
                    ]
                }
            ]
        },
        "NetworkModeAwsVpc": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "NetworkModeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "NetworkMode"
                                },
                                "awsvpc"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "NetworkModeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "bridge",
                                "awsvpc"
                            ]
                        }
                    ]
                },
                {
                    "Condition": "LaunchTypeFarGate"
                }
            ]
        },
        "NetworkModeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NetworkMode"
                        },
                        ""
                    ]
                }
            ]
        },
        "NetworkModeStandard": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "NetworkModeOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "NetworkMode"
                                        },
                                        "awsvpc"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "NetworkModeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "bridge",
                                        "awsvpc"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDown": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownRecurrenceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScheduledActionDownRecurrence"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownRecurrenceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionDownRecurrence"
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownCapacityMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "CapacityMax"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownCapacityMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "CapacityMin"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownDisable": {
            "Fn::Or": [
                {
                    "Fn::Not": [
                        {
                            "Condition": "ScheduledActionDown"
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownKeepMaxSize"
                        },
                        {
                            "Condition": "ScheduledActionDownKeepMinSize"
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownKeepMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownKeepMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownMaxSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownMaxSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownMinSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownMinSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownRecurrenceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownRecurrence"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownStartTimeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownStartTime"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUp": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpRecurrenceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScheduledActionUpRecurrence"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpRecurrenceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionUpRecurrence"
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpCapacityMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMaxSize"
                                    ]
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpCapacityMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMinSize"
                                    ]
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpDisable": {
            "Fn::Or": [
                {
                    "Fn::Not": [
                        {
                            "Condition": "ScheduledActionUp"
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpKeepMaxSize"
                        },
                        {
                            "Condition": "ScheduledActionUpKeepMinSize"
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpKeepMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMaxSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpKeepMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMinSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpMaxSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpMaxSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpMinSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpMinSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpRecurrenceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpRecurrence"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpStartTimeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpStartTime"
                        },
                        ""
                    ]
                }
            ]
        },
        "SecurityGroup0": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup1": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                1,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                1,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup2": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                2,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                2,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup3": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                3,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                3,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroupsOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "SecurityGroups"
                        },
                        ",,,"
                    ]
                }
            ]
        }
    },
    "Description": "buildkite [ecs]",
    "Mappings": {
        "dev": {
            "eu-central-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 3,
                "CapacityMax": 4,
                "CapacityMin": 3,
                "ContainerDefinitions1Cpu": 128,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "eu-west-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 3,
                "CapacityMax": 4,
                "CapacityMin": 3,
                "ContainerDefinitions1Cpu": 128,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "us-east-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 3,
                "CapacityMax": 4,
                "CapacityMin": 3,
                "ContainerDefinitions1Cpu": 128,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            }
        },
        "prd": {
            "eu-central-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 2,
                "AlarmTargetInternal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "ContainerDefinitions1Cpu": 256,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ScheduledActionUpMaxSize": "k",
                "ScheduledActionUpMinSize": "k"
            },
            "eu-west-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 2,
                "AlarmTargetInternal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "ContainerDefinitions1Cpu": 256,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ScheduledActionUpMaxSize": "k",
                "ScheduledActionUpMinSize": "k"
            },
            "us-east-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 2,
                "AlarmTargetInternal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "ContainerDefinitions1Cpu": 256,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ScheduledActionUpMaxSize": "k",
                "ScheduledActionUpMinSize": "k"
            }
        },
        "stg": {
            "eu-central-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 3,
                "CapacityMax": 4,
                "CapacityMin": 3,
                "ContainerDefinitions1Cpu": 128,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "eu-west-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 3,
                "CapacityMax": 4,
                "CapacityMin": 3,
                "ContainerDefinitions1Cpu": 128,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "us-east-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 3,
                "CapacityMax": 4,
                "CapacityMin": 3,
                "ContainerDefinitions1Cpu": 128,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            }
        }
    },
    "Outputs": {
        "BrandDomain": {
            "Value": "aman.arda"
        },
        "Capacity": {
            "Value": {
                "Fn::Sub": [
                    "Desired=${CapacityDesired},Min=${CapacityMin},Max=${CapacityMax}",
                    {
                        "CapacityDesired": {
                            "Fn::If": [
                                "CapacityDesiredOverride",
                                {
                                    "Ref": "CapacityDesired"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityDesired"
                                    ]
                                }
                            ]
                        },
                        "CapacityMax": {
                            "Fn::If": [
                                "CapacityMaxOverride",
                                {
                                    "Ref": "CapacityMax"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMax"
                                    ]
                                }
                            ]
                        },
                        "CapacityMin": {
                            "Fn::If": [
                                "CapacityMinOverride",
                                {
                                    "Ref": "CapacityMin"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMin"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CloudFrontWebACLId": {
            "Value": {
                "Fn::If": [
                    "CloudFrontWebACLIdOverride",
                    {
                        "Ref": "CloudFrontWebACLId"
                    },
                    "None"
                ]
            }
        },
        "ContainerDefinitions1Constraints": {
            "Value": {
                "Fn::Sub": [
                    "Cpu:${Cpu},Memory:${Memory},MemoryReservation:${MemoryReservation}",
                    {
                        "Cpu": {
                            "Fn::If": [
                                "CpuTask",
                                {
                                    "Fn::If": [
                                        "CpuOverride",
                                        {
                                            "Ref": "Cpu"
                                        },
                                        "None"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1CpuOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Cpu"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ContainerDefinitions1Cpu"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "Memory": {
                            "Fn::If": [
                                "LaunchTypeFarGate",
                                {
                                    "Fn::If": [
                                        "MemoryOverride",
                                        {
                                            "Ref": "Memory"
                                        },
                                        512
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1MemoryOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Memory"
                                        },
                                        128
                                    ]
                                }
                            ]
                        },
                        "MemoryReservation": {
                            "Fn::If": [
                                "ContainerDefinitions1MemoryReservationOverride",
                                {
                                    "Ref": "ContainerDefinitions1MemoryReservation"
                                },
                                64
                            ]
                        }
                    }
                ]
            }
        },
        "ContainerDefinitions1Envs": {
            "Value": {
                "Fn::Sub": [
                    "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}",
                    {
                        "AWS_DEFAULT_REGION": {
                            "Fn::If": [
                                "ContainerDefinitions1EnvsAWSDEFAULTREGIONValueOverride",
                                {
                                    "Ref": "ContainerDefinitions1EnvsAWSDEFAULTREGIONValue"
                                },
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "Cpu": {
            "Condition": "CpuTask",
            "Value": {
                "Fn::If": [
                    "CpuOverride",
                    {
                        "Ref": "Cpu"
                    },
                    "None"
                ]
            }
        },
        "DeploymentConfigurationMaximumPercent": {
            "Value": {
                "Fn::If": [
                    "DeploymentConfigurationMaximumPercentOverride",
                    {
                        "Ref": "DeploymentConfigurationMaximumPercent"
                    },
                    200
                ]
            }
        },
        "DeploymentConfigurationMinimumHealthyPercent": {
            "Value": {
                "Fn::If": [
                    "DeploymentConfigurationMinimumHealthyPercentOverride",
                    {
                        "Ref": "DeploymentConfigurationMinimumHealthyPercent"
                    },
                    100
                ]
            }
        },
        "Env": {
            "Value": {
                "Ref": "Env"
            }
        },
        "EnvApp1Version": {
            "Value": {
                "Ref": "EnvApp1Version"
            }
        },
        "EnvRole": {
            "Value": {
                "Ref": "EnvRole"
            }
        },
        "EnvStackVersion": {
            "Value": {
                "Ref": "EnvStackVersion"
            }
        },
        "LaunchType": {
            "Value": {
                "Fn::If": [
                    "LaunchTypeOverride",
                    {
                        "Ref": "LaunchType"
                    },
                    "EC2"
                ]
            }
        },
        "LoadBalancerSslCertificate": {
            "Value": {
                "Fn::If": [
                    "LoadBalancerSslCertificateOverride",
                    {
                        "Ref": "LoadBalancerSslCertificate"
                    },
                    true
                ]
            }
        },
        "LogDriver": {
            "Value": {
                "Fn::If": [
                    "LogDriverOverride",
                    {
                        "Ref": "LogDriver"
                    },
                    "awslogs"
                ]
            }
        },
        "Memory": {
            "Condition": "LaunchTypeFarGate",
            "Value": {
                "Fn::If": [
                    "MemoryOverride",
                    {
                        "Ref": "Memory"
                    },
                    512
                ]
            }
        },
        "RepoName": {
            "Value": {
                "Fn::Sub": [
                    "${BrandRegion}.${Brand}.services.buildkite",
                    {
                        "Brand": "aman",
                        "BrandRegion": "arda"
                    }
                ]
            }
        },
        "ScheduledActionDown": {
            "Value": {
                "Fn::Sub": [
                    "MinSize=${MinSize},MaxSize=${MaxSize},Recurrence=${Recurrence},StartTime=${StartTime}",
                    {
                        "MaxSize": {
                            "Fn::If": [
                                "ScheduledActionDownMaxSizeOverride",
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "k"
                            ]
                        },
                        "MinSize": {
                            "Fn::If": [
                                "ScheduledActionDownMinSizeOverride",
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "k"
                            ]
                        },
                        "Recurrence": {
                            "Fn::If": [
                                "ScheduledActionDownRecurrenceOverride",
                                {
                                    "Ref": "ScheduledActionDownRecurrence"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownRecurrence"
                                    ]
                                }
                            ]
                        },
                        "StartTime": {
                            "Ref": "ScheduledActionDownStartTime"
                        }
                    }
                ]
            }
        },
        "ScheduledActionUp": {
            "Value": {
                "Fn::Sub": [
                    "MinSize=${MinSize},MaxSize=${MaxSize},Recurrence=${Recurrence},StartTime=${StartTime}",
                    {
                        "MaxSize": {
                            "Fn::If": [
                                "ScheduledActionUpMaxSizeOverride",
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMaxSize"
                                    ]
                                }
                            ]
                        },
                        "MinSize": {
                            "Fn::If": [
                                "ScheduledActionUpMinSizeOverride",
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMinSize"
                                    ]
                                }
                            ]
                        },
                        "Recurrence": {
                            "Fn::If": [
                                "ScheduledActionUpRecurrenceOverride",
                                {
                                    "Ref": "ScheduledActionUpRecurrence"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpRecurrence"
                                    ]
                                }
                            ]
                        },
                        "StartTime": {
                            "Ref": "ScheduledActionUpStartTime"
                        }
                    }
                ]
            }
        },
        "SecurityGroups": {
            "Condition": "NetworkModeAwsVpc",
            "Value": {
                "Fn::Sub": [
                    "Service=${SecurityGroupEcsService},${SecurityGroupName0}=${SecurityGroupValue0},${SecurityGroupName1}=${SecurityGroupValue1},${SecurityGroupName2}=${SecurityGroupValue2},${SecurityGroupName3}=${SecurityGroupValue3}",
                    {
                        "SecurityGroupEcsService": {
                            "Ref": "SecurityGroupEcsService"
                        },
                        "SecurityGroupName0": {
                            "Fn::Select": [
                                0,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName1": {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName2": {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName3": {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupValue0": {
                            "Fn::If": [
                                "SecurityGroup0",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        0,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue1": {
                            "Fn::If": [
                                "SecurityGroup1",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        1,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue2": {
                            "Fn::If": [
                                "SecurityGroup2",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        2,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue3": {
                            "Fn::If": [
                                "SecurityGroup3",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        3,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        }
                    }
                ]
            }
        },
        "StackType": {
            "Value": "ecs"
        }
    },
    "Parameters": {
        "CapacityDesired": {
            "Default": "",
            "Description": "Desired Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CapacityMax": {
            "Default": "",
            "Description": "Max Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CapacityMin": {
            "Default": "",
            "Description": "Min Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CloudFrontWebACLId": {
            "Default": "",
            "Description": "CloudFront WebACLId - empty for default based on env/role",
            "Type": "String"
        },
        "ClusterStack": {
            "Default": "",
            "Description": "Cluster Stack Name used to launch service on - - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1Cpu": {
            "Default": "",
            "Description": "Cpu Share for containers - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1EnvsAWSDEFAULTREGIONValue": {
            "Default": "",
            "Description": "AWS_DEFAULT_REGION - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1Memory": {
            "Default": "",
            "Description": "Memory hard limit for containers - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1MemoryReservation": {
            "Default": "",
            "Description": "Memory soft limit for containers - empty for default based on env/role",
            "Type": "String"
        },
        "Cpu": {
            "AllowedValues": [
                "",
                "None",
                "128",
                "256",
                "384",
                "512",
                "640",
                "768",
                "896",
                "1024",
                "1152",
                "1280",
                "1408",
                "1536",
                "1664",
                "1792",
                "1920",
                "2048",
                "2176",
                "2304",
                "2432",
                "2560",
                "2688",
                "2816",
                "2944",
                "3072",
                "3200",
                "3328",
                "3456",
                "3584",
                "3712",
                "3840",
                "3968",
                "4096"
            ],
            "Default": "",
            "Description": "Cpu used by task - empty for default based on env/role",
            "Type": "String"
        },
        "DeploymentConfigurationMaximumPercent": {
            "Default": "",
            "Description": "DeploymentConfiguration MaximumPercent - empty for default based on env/role",
            "Type": "String"
        },
        "DeploymentConfigurationMinimumHealthyPercent": {
            "Default": "",
            "Description": "DeploymentConfiguration MinimumHealthyPercent - empty for default based on env/role",
            "Type": "String"
        },
        "DockerLabelLastUpdate": {
            "Default": "",
            "Description": "Use to force redeploy",
            "Type": "String"
        },
        "Env": {
            "AllowedValues": [
                "dev",
                "stg",
                "prod"
            ],
            "Default": "dev",
            "Description": "Environment",
            "Type": "String"
        },
        "EnvApp1Version": {
            "AllowedPattern": "^[a-zA-Z0-9-_.]*$",
            "Default": "1",
            "Description": "EnvApp1Version",
            "Type": "String"
        },
        "EnvRole": {
            "AllowedPattern": "^[a-zA-Z0-9-_.]*$",
            "Default": "",
            "Description": "Service Role",
            "Type": "String"
        },
        "EnvShort": {
            "AllowedValues": [
                "dev",
                "stg",
                "prd"
            ],
            "Default": "dev",
            "Description": "Environment Short - NEVER CHANGE!",
            "Type": "String"
        },
        "EnvStackVersion": {
            "Default": "1",
            "Description": "Stack version, if changed with UpdateMode=Cfn triggers cfn-hup",
            "Type": "String"
        },
        "LaunchType": {
            "AllowedValues": [
                "",
                "EC2",
                "FARGATE"
            ],
            "Default": "",
            "Description": "RunTask LaunchType - empty for default based on env/role",
            "Type": "String"
        },
        "ListenerLoadBalancerHttpPort": {
            "Default": "",
            "Description": "Http Port where Load Balancer listen - empty for default based on env/role",
            "Type": "String"
        },
        "ListenerLoadBalancerHttpsPort": {
            "Default": "",
            "Description": "Http Port where Load Balancer listen - empty for default based on env/role",
            "Type": "String"
        },
        "LoadBalancerApplicationStack": {
            "Default": "",
            "Description": "LoadBalancer Application Stack to use - empty for default based on env/role",
            "Type": "String"
        },
        "LoadBalancerSslCertificate": {
            "Default": "",
            "Description": "Load Balancer External Ssl Certificate - None to disable - empty for default based on env/role",
            "Type": "String"
        },
        "LogDriver": {
            "AllowedValues": [
                "",
                "None",
                "awslogs",
                "fluentd",
                "gelf",
                "journald",
                "json-file",
                "splunk",
                "syslog"
            ],
            "Default": "",
            "Description": "Log driver for task container - empty for default",
            "Type": "String"
        },
        "Memory": {
            "Default": "",
            "Description": "Memory used by task - empty for default based on env/role",
            "Type": "String"
        },
        "NetworkMode": {
            "AllowedValues": [
                "",
                "awsvpc",
                "bridge"
            ],
            "Default": "",
            "Description": "Task NetworkMode - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownMaxSize": {
            "Default": "",
            "Description": "ScheduledActionDownMax Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownMinSize": {
            "Default": "",
            "Description": "ScheduledActionDownMin Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownRecurrence": {
            "Default": "",
            "Description": "ScheduledActionDownRecurrence - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownStartTime": {
            "Default": "",
            "Description": "ScheduledActionDownStartTime - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpMaxSize": {
            "Default": "",
            "Description": "ScheduledActionUpMax Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpMinSize": {
            "Default": "",
            "Description": "ScheduledActionUpMin Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpRecurrence": {
            "Default": "",
            "Description": "ScheduledActionUpRecurrence - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpStartTime": {
            "Default": "",
            "Description": "ScheduledActionUpStartTime - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "SecurityGroups": {
            "AllowedPattern": "^(\\w*,\\w*){3}$",
            "Default": ",,,",
            "Description": "SecurityGroups List Extra - ,,, for default based on env/role",
            "Type": "String"
        }
    },
    "Resources": {
        "IAMPolicyCloudWatch": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "cloudwatch:PutMetricData"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "CloudWatch",
                "Roles": [
                    {
                        "Ref": "RoleTask"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "IAMPolicyParameterStore": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "kms:Decrypt",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::ImportValue": "KeyParameterStore"
                            }
                        },
                        {
                            "Action": "ssm:DescribeParameters",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:*"
                            }
                        },
                        {
                            "Action": "ssm:GetParameters",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvRole}/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/${EnvRole}/*"
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ParameterStore",
                "Roles": [
                    {
                        "Ref": "RoleTask"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "IAMPolicyUpdateStack": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:Get*",
                                "s3:List*",
                                "s3:Put*",
                                "iam:PassRole",
                                "iam:ListServerCertificates",
                                "iam:GetRole",
                                "iam:PutRolePolicy",
                                "elasticloadbalancing:*",
                                "ec2:*",
                                "ecs:*",
                                "ecr:*",
                                "sqs:*",
                                "sns:*",
                                "cloudwatch:*",
                                "autoscaling:*",
                                "route53:*",
                                "codedeploy:*",
                                "acm:*",
                                "cloudformation:DescribeStack*",
                                "cloudformation:GetTemplate*",
                                "cloudformation:ListExports",
                                "cloudformation:UpdateStack",
                                "cloudformation:ValidateTemplate",
                                "cloudfront:GetDistribution*",
                                "cloudfront:ListDistributions",
                                "cloudfront:ListCloudFrontOriginAccessIdentities",
                                "lambda:*",
                                "events:*",
                                "waf:GetWebACL",
                                "waf:ListWebACLs"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:iam::173707202817:role/buildkite_sa",
                                "arn:aws:iam::429548892436:role/buildkite_sa"
                            ]
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:ssm:*:*:parameter/aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id",
                                "arn:aws:ssm:*:*:parameter/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UpdateStack",
                "Roles": [
                    {
                        "Ref": "RoleTask"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "LogsLogGroup": {
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/ecs/${AWS::StackName}"
                },
                "RetentionInDays": 30
            },
            "Type": "AWS::Logs::LogGroup"
        },
        "RoleTask": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "ScalableTarget": {
            "Properties": {
                "MaxCapacity": {
                    "Fn::If": [
                        "CapacityMaxOverride",
                        {
                            "Ref": "CapacityMax"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                "MinCapacity": {
                    "Fn::If": [
                        "CapacityMinOverride",
                        {
                            "Ref": "CapacityMin"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                "ResourceId": {
                    "Fn::Sub": [
                        "service/${Cluster}/${Service.Name}",
                        {
                            "Cluster": {
                                "Fn::ImportValue": {
                                    "Fn::Sub": [
                                        "Cluster-${ClusterStack}",
                                        {
                                            "ClusterStack": {
                                                "Fn::If": [
                                                    "ClusterStackOverride",
                                                    {
                                                        "Ref": "ClusterStack"
                                                    },
                                                    "ecs-a"
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "RoleARN": {
                    "Fn::ImportValue": "RoleEC2ContainerServiceAutoscale"
                },
                "ScalableDimension": "ecs:service:DesiredCount",
                "ScheduledActions": [
                    {
                        "Fn::If": [
                            "ScheduledActionDownDisable",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            {
                                "ScalableTargetAction": {
                                    "MaxCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionDownCapacityMaxSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMaxOverride",
                                                    {
                                                        "Ref": "CapacityMax"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMax"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionDownKeepMaxSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionDownMaxSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionDownMaxSize"
                                                            },
                                                            "k"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "MinCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionDownCapacityMinSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMinOverride",
                                                    {
                                                        "Ref": "CapacityMin"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMin"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionDownKeepMinSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionDownMinSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionDownMinSize"
                                                            },
                                                            "k"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "Schedule": {
                                    "Fn::If": [
                                        "ScheduledActionDownRecurrenceOverride",
                                        {
                                            "Ref": "ScheduledActionDownRecurrence"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionDownRecurrence"
                                            ]
                                        }
                                    ]
                                },
                                "ScheduledActionName": "ScheduledActionDown",
                                "StartTime": {
                                    "Fn::If": [
                                        "ScheduledActionDownStartTimeOverride",
                                        {
                                            "Ref": "ScheduledActionDownStartTime"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "ScheduledActionUpDisable",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            {
                                "ScalableTargetAction": {
                                    "MaxCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionUpCapacityMaxSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMaxOverride",
                                                    {
                                                        "Ref": "CapacityMax"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMax"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionUpKeepMaxSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionUpMaxSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionUpMaxSize"
                                                            },
                                                            {
                                                                "Fn::FindInMap": [
                                                                    {
                                                                        "Ref": "EnvShort"
                                                                    },
                                                                    {
                                                                        "Ref": "AWS::Region"
                                                                    },
                                                                    "ScheduledActionUpMaxSize"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "MinCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionUpCapacityMinSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMinOverride",
                                                    {
                                                        "Ref": "CapacityMin"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMin"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionUpKeepMinSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionUpMinSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionUpMinSize"
                                                            },
                                                            {
                                                                "Fn::FindInMap": [
                                                                    {
                                                                        "Ref": "EnvShort"
                                                                    },
                                                                    {
                                                                        "Ref": "AWS::Region"
                                                                    },
                                                                    "ScheduledActionUpMinSize"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "Schedule": {
                                    "Fn::If": [
                                        "ScheduledActionUpRecurrenceOverride",
                                        {
                                            "Ref": "ScheduledActionUpRecurrence"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionUpRecurrence"
                                            ]
                                        }
                                    ]
                                },
                                "ScheduledActionName": "ScheduledActionUp",
                                "StartTime": {
                                    "Fn::If": [
                                        "ScheduledActionUpStartTimeOverride",
                                        {
                                            "Ref": "ScheduledActionUpStartTime"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                ],
                "ServiceNamespace": "ecs"
            },
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
        },
        "SecurityGroupEcsService": {
            "Condition": "NetworkModeAwsVpc",
            "Properties": {
                "GroupDescription": "Enable access to Service",
                "SecurityGroupIngress": [],
                "VpcId": {
                    "Fn::ImportValue": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "Service": {
            "Properties": {
                "Cluster": {
                    "Fn::ImportValue": {
                        "Fn::Sub": [
                            "Cluster-${ClusterStack}",
                            {
                                "ClusterStack": {
                                    "Fn::If": [
                                        "ClusterStackOverride",
                                        {
                                            "Ref": "ClusterStack"
                                        },
                                        "ecs-a"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "DeploymentConfiguration": {
                    "MaximumPercent": {
                        "Fn::If": [
                            "DeploymentConfigurationMaximumPercentOverride",
                            {
                                "Ref": "DeploymentConfigurationMaximumPercent"
                            },
                            200
                        ]
                    },
                    "MinimumHealthyPercent": {
                        "Fn::If": [
                            "DeploymentConfigurationMinimumHealthyPercentOverride",
                            {
                                "Ref": "DeploymentConfigurationMinimumHealthyPercent"
                            },
                            100
                        ]
                    }
                },
                "DesiredCount": {
                    "Fn::If": [
                        "CapacityDesiredOverride",
                        {
                            "Ref": "CapacityDesired"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                },
                "LaunchType": {
                    "Fn::If": [
                        "LaunchTypeOverride",
                        {
                            "Ref": "LaunchType"
                        },
                        "EC2"
                    ]
                },
                "NetworkConfiguration": {
                    "Fn::If": [
                        "NetworkModeAwsVpc",
                        {
                            "AwsvpcConfiguration": {
                                "SecurityGroups": [
                                    {
                                        "Fn::GetAtt": [
                                            "SecurityGroupEcsService",
                                            "GroupId"
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup0",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    0,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup1",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    1,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup2",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    2,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup3",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    3,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    }
                                ],
                                "Subnets": {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::ImportValue": "SubnetsPrivate"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "PlacementStrategies": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        [
                            {
                                "Field": "instanceId",
                                "Type": "spread"
                            }
                        ]
                    ]
                },
                "TaskDefinition": {
                    "Ref": "TaskDefinition"
                }
            },
            "Type": "AWS::ECS::Service"
        },
        "TaskDefinition": {
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Cpu": {
                            "Fn::If": [
                                "CpuTask",
                                {
                                    "Fn::If": [
                                        "CpuOverride",
                                        {
                                            "Ref": "Cpu"
                                        },
                                        "None"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1CpuOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Cpu"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ContainerDefinitions1Cpu"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "DockerLabels": {
                            "Fn::If": [
                                "DockerLabelLastUpdateOverride",
                                {
                                    "LastUpdate": {
                                        "Ref": "DockerLabelLastUpdate"
                                    }
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        "Environment": [
                            {
                                "Name": "AWS_DEFAULT_REGION",
                                "Value": {
                                    "Fn::If": [
                                        "ContainerDefinitions1EnvsAWSDEFAULTREGIONValueOverride",
                                        {
                                            "Ref": "ContainerDefinitions1EnvsAWSDEFAULTREGIONValue"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        }
                                    ]
                                }
                            },
                            {
                                "Name": "EnvRegion",
                                "Value": {
                                    "Ref": "AWS::Region"
                                }
                            },
                            {
                                "Name": "Env",
                                "Value": {
                                    "Ref": "Env"
                                }
                            },
                            {
                                "Name": "EnvAbbr",
                                "Value": {
                                    "Ref": "EnvShort"
                                }
                            },
                            {
                                "Name": "EnvBrand",
                                "Value": "aman.arda"
                            },
                            {
                                "Name": "EnvRole",
                                "Value": {
                                    "Ref": "EnvRole"
                                }
                            },
                            {
                                "Name": "EnvStackName",
                                "Value": {
                                    "Ref": "AWS::StackName"
                                }
                            },
                            {
                                "Name": "EnvClusterStackName",
                                "Value": {
                                    "Fn::If": [
                                        "ClusterStackOverride",
                                        {
                                            "Ref": "ClusterStack"
                                        },
                                        "ecs-a"
                                    ]
                                }
                            }
                        ],
                        "Essential": "true",
                        "Image": {
                            "Fn::Sub": [
                                "${EcrAccount}.dkr.ecr.${AWS::Region}.amazonaws.com/${RepoName}:${EnvApp1Version}",
                                {
                                    "EcrAccount": {
                                        "Fn::FindInMap": [
                                            {
                                                "Ref": "EnvShort"
                                            },
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "EcrAccount"
                                        ]
                                    },
                                    "RepoName": {
                                        "Fn::Sub": [
                                            "${BrandRegion}.${Brand}.services.buildkite",
                                            {
                                                "Brand": "aman",
                                                "BrandRegion": "arda"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "LogConfiguration": {
                            "Fn::If": [
                                "LogConfiguration",
                                {
                                    "LogDriver": {
                                        "Fn::If": [
                                            "LogDriverOverride",
                                            {
                                                "Ref": "LogDriver"
                                            },
                                            "awslogs"
                                        ]
                                    },
                                    "Options": {
                                        "awslogs-group": {
                                            "Ref": "LogsLogGroup"
                                        },
                                        "awslogs-region": {
                                            "Ref": "AWS::Region"
                                        },
                                        "awslogs-stream-prefix": {
                                            "Ref": "AWS::StackName"
                                        }
                                    }
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        "Memory": {
                            "Fn::If": [
                                "LaunchTypeFarGate",
                                {
                                    "Fn::If": [
                                        "MemoryOverride",
                                        {
                                            "Ref": "Memory"
                                        },
                                        512
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1MemoryOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Memory"
                                        },
                                        128
                                    ]
                                }
                            ]
                        },
                        "MemoryReservation": {
                            "Fn::If": [
                                "ContainerDefinitions1MemoryReservationOverride",
                                {
                                    "Ref": "ContainerDefinitions1MemoryReservation"
                                },
                                64
                            ]
                        },
                        "MountPoints": [
                            {
                                "ContainerPath": "/var/run/docker.sock",
                                "ReadOnly": "false",
                                "SourceVolume": "DockerSock"
                            }
                        ],
                        "Name": {
                            "Ref": "EnvRole"
                        }
                    }
                ],
                "Cpu": {
                    "Fn::If": [
                        "CpuTask",
                        {
                            "Fn::If": [
                                "CpuOverride",
                                {
                                    "Ref": "Cpu"
                                },
                                "None"
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "ExecutionRoleArn": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        {
                            "Fn::ImportValue": "RoleECSTaskExecution"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Memory": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        {
                            "Fn::If": [
                                "MemoryOverride",
                                {
                                    "Ref": "Memory"
                                },
                                512
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkMode": {
                    "Fn::If": [
                        "NetworkModeAwsVpc",
                        "awsvpc",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "RequiresCompatibilities": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        [
                            "EC2",
                            "FARGATE"
                        ],
                        [
                            "EC2"
                        ]
                    ]
                },
                "TaskRoleArn": {
                    "Ref": "RoleTask"
                },
                "Volumes": [
                    {
                        "Host": {
                            "SourcePath": "/var/run/docker.sock"
                        },
                        "Name": "DockerSock"
                    }
                ]
            },
            "Type": "AWS::ECS::TaskDefinition"
        }
    }
}
