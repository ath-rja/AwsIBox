{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {
        "AlarmTargetExternal5XX": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "AlarmTargetExternal5XXEvaluationPeriodsOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "AlarmTargetExternal5XXEvaluationPeriods"
                                        },
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "AlarmTargetExternal5XXEvaluationPeriodsOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "AlarmTargetExternal5XXEvaluationPeriods"
                                            ]
                                        },
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "AlarmTargetExternal5XXEvaluationPeriodsOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AlarmTargetExternal5XXEvaluationPeriods"
                        },
                        ""
                    ]
                }
            ]
        },
        "AlarmTargetExternal5XXThresholdOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AlarmTargetExternal5XXThreshold"
                        },
                        ""
                    ]
                }
            ]
        },
        "AllowedIp1": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        true,
                        "None"
                    ]
                }
            ]
        },
        "AllowedIp2": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        false,
                        "None"
                    ]
                }
            ]
        },
        "CapacityDesiredOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityDesired"
                        },
                        ""
                    ]
                }
            ]
        },
        "CapacityMaxOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityMax"
                        },
                        ""
                    ]
                }
            ]
        },
        "CapacityMinOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CapacityMin"
                        },
                        ""
                    ]
                }
            ]
        },
        "CloudFrontAcmCertificate": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        true,
                        "None"
                    ]
                }
            ]
        },
        "CloudFrontAliasExtra1": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CloudFrontAliasExtra1Override"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "CloudFrontAliasExtra1"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CloudFrontAliasExtra1Override"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "CloudFrontAliasExtra1"
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontAliasExtra1Override": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CloudFrontAliasExtra1"
                        },
                        ""
                    ]
                }
            ]
        },
        "CloudFrontAliasExtra2": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CloudFrontAliasExtra2Override"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "CloudFrontAliasExtra2"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CloudFrontAliasExtra2Override"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontAliasExtra2Override": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CloudFrontAliasExtra2"
                        },
                        ""
                    ]
                }
            ]
        },
        "CloudFrontAliasZone": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        "client-portal",
                        "None"
                    ]
                }
            ]
        },
        "CloudFrontCacheBehaviors0CookiesWhitelistedNames": {
            "Fn::Equals": [
                "all",
                "whitelist"
            ]
        },
        "CloudFrontCacheBehaviors0QueryStringCacheKeys": {
            "Fn::Equals": [
                true,
                true
            ]
        },
        "CloudFrontDistribution": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CloudFrontOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "CloudFront"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CloudFrontOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontLogging": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CloudFrontLoggingOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "CloudFrontLogging"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CloudFrontLoggingOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontLoggingOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CloudFrontLogging"
                        },
                        ""
                    ]
                }
            ]
        },
        "CloudFrontOriginAdHoc": {
            "Fn::Equals": [
                false,
                true
            ]
        },
        "CloudFrontOriginProtocolHTTP": {
            "Fn::And": [
                {
                    "Condition": "ListenerLoadBalancerHttpPort"
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                "https-only",
                                "https-only"
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontOriginProtocolHTTPS": {
            "Fn::And": [
                {
                    "Condition": "ListenerLoadBalancerHttpsPort"
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                "https-only",
                                "http-only"
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CloudFront"
                        },
                        ""
                    ]
                }
            ]
        },
        "CloudFrontWebACLId": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CloudFrontWebACLIdOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "CloudFrontWebACLId"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CloudFrontWebACLIdOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "CloudFrontWebACLIdOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CloudFrontWebACLId"
                        },
                        ""
                    ]
                }
            ]
        },
        "ClusterStackOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ClusterStack"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1CpuOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1Cpu"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1EnvsNODEENVValueOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1EnvsNODEENVValue"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1MemoryOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1Memory"
                        },
                        ""
                    ]
                }
            ]
        },
        "ContainerDefinitions1MemoryReservationOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ContainerDefinitions1MemoryReservation"
                        },
                        ""
                    ]
                }
            ]
        },
        "CpuOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Cpu"
                        },
                        ""
                    ]
                }
            ]
        },
        "CpuTask": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "CpuOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "Cpu"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "CpuOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "None",
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "DeploymentConfigurationMaximumPercentOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DeploymentConfigurationMaximumPercent"
                        },
                        ""
                    ]
                }
            ]
        },
        "DeploymentConfigurationMinimumHealthyPercentOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DeploymentConfigurationMinimumHealthyPercent"
                        },
                        ""
                    ]
                }
            ]
        },
        "DockerLabelLastUpdateOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DockerLabelLastUpdate"
                        },
                        ""
                    ]
                }
            ]
        },
        "LaunchTypeFarGate": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "LaunchTypeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "LaunchType"
                                },
                                "FARGATE"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "LaunchTypeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "EC2",
                                "FARGATE"
                            ]
                        }
                    ]
                }
            ]
        },
        "LaunchTypeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LaunchType"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpPort": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ListenerLoadBalancerHttpPortOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ListenerLoadBalancerHttpPort"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ListenerLoadBalancerHttpPortOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        80,
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpPortOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpsPort": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ListenerLoadBalancerHttpsPortOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ListenerLoadBalancerHttpsPort"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ListenerLoadBalancerHttpsPortOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        443,
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ListenerLoadBalancerHttpsPortOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerRules1HostHeaderOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerRules1HostHeader"
                        },
                        ""
                    ]
                }
            ]
        },
        "ListenerRules1PriorityOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ListenerRules1Priority"
                        },
                        ""
                    ]
                }
            ]
        },
        "LoadBalancerApplicationStackOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LoadBalancerApplicationStack"
                        },
                        ""
                    ]
                }
            ]
        },
        "LoadBalancerPublic": {
            "Fn::Equals": [
                "Public",
                "Public"
            ]
        },
        "LoadBalancerSslCertificateAdHoc": {
            "Fn::And": [
                {
                    "Condition": "ListenerLoadBalancerHttpsPort"
                },
                {
                    "Fn::Equals": [
                        true,
                        "None"
                    ]
                }
            ]
        },
        "LoadBalancerSslCertificateOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LoadBalancerSslCertificate"
                        },
                        ""
                    ]
                }
            ]
        },
        "LogConfiguration": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        "awslogs",
                        "None"
                    ]
                }
            ]
        },
        "LogDriverOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "LogDriver"
                        },
                        ""
                    ]
                }
            ]
        },
        "MemoryOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Memory"
                        },
                        ""
                    ]
                }
            ]
        },
        "NetworkModeAwsVpc": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "NetworkModeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "NetworkMode"
                                },
                                "awsvpc"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "NetworkModeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "bridge",
                                "awsvpc"
                            ]
                        }
                    ]
                },
                {
                    "Condition": "LaunchTypeFarGate"
                }
            ]
        },
        "NetworkModeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NetworkMode"
                        },
                        ""
                    ]
                }
            ]
        },
        "NetworkModeStandard": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "NetworkModeOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "NetworkMode"
                                        },
                                        "awsvpc"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "NetworkModeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        "bridge",
                                        "awsvpc"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "RecordSetCloudFront": {
            "Fn::And": [
                {
                    "Condition": "CloudFrontDistribution"
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                "None",
                                "None"
                            ]
                        }
                    ]
                }
            ]
        },
        "RecordSetCloudFrontSuffixOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "RecordSetCloudFrontSuffix"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScalingPolicyTrackingsAPPCpu": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValueOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValue"
                                        },
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValueOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        80,
                                        "0"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationStatisticOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationStatistic"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValueOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValue"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDown": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownRecurrenceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScheduledActionDownRecurrence"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownRecurrenceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionDownRecurrence"
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownCapacityMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "CapacityMax"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownCapacityMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "CapacityMin"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownDisable": {
            "Fn::Or": [
                {
                    "Fn::Not": [
                        {
                            "Condition": "ScheduledActionDown"
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownKeepMaxSize"
                        },
                        {
                            "Condition": "ScheduledActionDownKeepMinSize"
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownKeepMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownKeepMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionDownMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionDownMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                "k",
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionDownMaxSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownMaxSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownMinSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownMinSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownRecurrenceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownRecurrence"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionDownStartTimeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionDownStartTime"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUp": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpRecurrenceOverride"
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Ref": "ScheduledActionUpRecurrence"
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpRecurrenceOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Not": [
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionUpRecurrence"
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpCapacityMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMaxSize"
                                    ]
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpCapacityMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMinSize"
                                    ]
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpDisable": {
            "Fn::Or": [
                {
                    "Fn::Not": [
                        {
                            "Condition": "ScheduledActionUp"
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpKeepMaxSize"
                        },
                        {
                            "Condition": "ScheduledActionUpKeepMinSize"
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpKeepMaxSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMaxSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMaxSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMaxSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpKeepMinSize": {
            "Fn::Or": [
                {
                    "Fn::And": [
                        {
                            "Condition": "ScheduledActionUpMinSizeOverride"
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                "k"
                            ]
                        }
                    ]
                },
                {
                    "Fn::And": [
                        {
                            "Fn::Not": [
                                {
                                    "Condition": "ScheduledActionUpMinSizeOverride"
                                }
                            ]
                        },
                        {
                            "Fn::Equals": [
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMinSize"
                                    ]
                                },
                                "k"
                            ]
                        }
                    ]
                }
            ]
        },
        "ScheduledActionUpMaxSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpMaxSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpMinSizeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpMinSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpRecurrenceOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpRecurrence"
                        },
                        ""
                    ]
                }
            ]
        },
        "ScheduledActionUpStartTimeOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ScheduledActionUpStartTime"
                        },
                        ""
                    ]
                }
            ]
        },
        "SecurityGroup0": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup1": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                1,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                1,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup2": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                2,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                2,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroup3": {
            "Fn::Not": [
                {
                    "Fn::Or": [
                        {
                            "Fn::And": [
                                {
                                    "Condition": "SecurityGroupsOverride"
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                3,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        {
                                                            "Ref": "SecurityGroups"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::And": [
                                {
                                    "Fn::Not": [
                                        {
                                            "Condition": "SecurityGroupsOverride"
                                        }
                                    ]
                                },
                                {
                                    "Fn::Equals": [
                                        {
                                            "Fn::Select": [
                                                3,
                                                {
                                                    "Fn::Split": [
                                                        ",",
                                                        "BaseInstance,None,None,None"
                                                    ]
                                                }
                                            ]
                                        },
                                        "None"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpExternalAllowedIp1": {
            "Fn::And": [
                {
                    "Condition": "AllowedIp1"
                },
                {
                    "Fn::Not": [
                        {
                            "Condition": "LoadBalancerPublic"
                        }
                    ]
                },
                {
                    "Condition": "ListenerLoadBalancerHttpPort"
                }
            ]
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpExternalAllowedIp2": {
            "Fn::And": [
                {
                    "Condition": "AllowedIp2"
                },
                {
                    "Fn::Not": [
                        {
                            "Condition": "LoadBalancerPublic"
                        }
                    ]
                },
                {
                    "Condition": "ListenerLoadBalancerHttpPort"
                }
            ]
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpsExternalAllowedIp1": {
            "Fn::And": [
                {
                    "Condition": "AllowedIp1"
                },
                {
                    "Fn::Not": [
                        {
                            "Condition": "LoadBalancerPublic"
                        }
                    ]
                },
                {
                    "Condition": "ListenerLoadBalancerHttpsPort"
                }
            ]
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpsExternalAllowedIp2": {
            "Fn::And": [
                {
                    "Condition": "AllowedIp2"
                },
                {
                    "Fn::Not": [
                        {
                            "Condition": "LoadBalancerPublic"
                        }
                    ]
                },
                {
                    "Condition": "ListenerLoadBalancerHttpsPort"
                }
            ]
        },
        "SecurityGroupIngressPublicLoadBalancerHttpExternal": {
            "Fn::And": [
                {
                    "Condition": "ListenerLoadBalancerHttpPort"
                },
                {
                    "Condition": "LoadBalancerPublic"
                }
            ]
        },
        "SecurityGroupIngressPublicLoadBalancerHttpsExternal": {
            "Fn::And": [
                {
                    "Condition": "ListenerLoadBalancerHttpsPort"
                },
                {
                    "Condition": "LoadBalancerPublic"
                }
            ]
        },
        "SecurityGroupsOverride": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "SecurityGroups"
                        },
                        ",,,"
                    ]
                }
            ]
        },
        "TargetGroupCookieSticky": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        "None",
                        "None"
                    ]
                }
            ]
        }
    },
    "Description": "client-portal [ecs]",
    "Mappings": {
        "dev": {
            "eu-central-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 1,
                "CapacityMin": 1,
                "CloudFrontAliasExtra1": "None",
                "ContainerDefinitions1Cpu": 16,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "eu-west-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 1,
                "CapacityMin": 1,
                "CloudFrontAliasExtra1": "None",
                "ContainerDefinitions1Cpu": 16,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "us-east-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 1,
                "CapacityMin": 1,
                "CloudFrontAliasExtra1": "None",
                "ContainerDefinitions1Cpu": 16,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            }
        },
        "prd": {
            "eu-central-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 2,
                "AlarmTargetInternal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "CloudFrontAliasExtra1": "client-portal.numenor.arda",
                "ContainerDefinitions1Cpu": 256,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ScheduledActionUpMaxSize": "k",
                "ScheduledActionUpMinSize": "k"
            },
            "eu-west-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 2,
                "AlarmTargetInternal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "CloudFrontAliasExtra1": "client-portal.numenor.arda",
                "ContainerDefinitions1Cpu": 256,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ScheduledActionUpMaxSize": "k",
                "ScheduledActionUpMinSize": "k"
            },
            "us-east-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 2,
                "AlarmTargetInternal5XXEvaluationPeriods": 2,
                "CapacityDesired": 2,
                "CapacityMax": 9,
                "CapacityMin": 2,
                "CloudFrontAliasExtra1": "client-portal.numenor.arda",
                "ContainerDefinitions1Cpu": 256,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ScheduledActionUpMaxSize": "k",
                "ScheduledActionUpMinSize": "k"
            }
        },
        "stg": {
            "eu-central-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 1,
                "CapacityMin": 1,
                "CloudFrontAliasExtra1": "None",
                "ContainerDefinitions1Cpu": 16,
                "HostedZoneIdLB": "Z215JYRZR1TBD5",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "eu-west-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 1,
                "CapacityMin": 1,
                "CloudFrontAliasExtra1": "None",
                "ContainerDefinitions1Cpu": 16,
                "HostedZoneIdLB": "Z32O12XQLNTSW2",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            },
            "us-east-1": {
                "AlarmTargetExternal5XXEvaluationPeriods": 0,
                "AlarmTargetInternal5XXEvaluationPeriods": 0,
                "CapacityDesired": 1,
                "CapacityMax": 1,
                "CapacityMin": 1,
                "CloudFrontAliasExtra1": "None",
                "ContainerDefinitions1Cpu": 16,
                "HostedZoneIdLB": "Z35SXDOTRQ7X7K",
                "ScheduledActionUpMaxSize": "CapacityMax",
                "ScheduledActionUpMinSize": "CapacityMin"
            }
        }
    },
    "Outputs": {
        "AlarmTargetExternal5XX": {
            "Value": {
                "Fn::Sub": [
                    "Period=${AlarmTargetExternal5XXPeriod},EvaluationPeriods=${AlarmTargetExternal5XXEvaluationPeriods},Threshold=${AlarmTargetExternal5XXThreshold}",
                    {
                        "AlarmTargetExternal5XXEvaluationPeriods": {
                            "Fn::If": [
                                "AlarmTargetExternal5XXEvaluationPeriodsOverride",
                                {
                                    "Ref": "AlarmTargetExternal5XXEvaluationPeriods"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "AlarmTargetExternal5XXEvaluationPeriods"
                                    ]
                                }
                            ]
                        },
                        "AlarmTargetExternal5XXPeriod": 60,
                        "AlarmTargetExternal5XXThreshold": {
                            "Fn::If": [
                                "AlarmTargetExternal5XXThresholdOverride",
                                {
                                    "Ref": "AlarmTargetExternal5XXThreshold"
                                },
                                "50"
                            ]
                        }
                    }
                ]
            }
        },
        "BrandDomain": {
            "Value": "aman.arda"
        },
        "Capacity": {
            "Value": {
                "Fn::Sub": [
                    "Desired=${CapacityDesired},Min=${CapacityMin},Max=${CapacityMax}",
                    {
                        "CapacityDesired": {
                            "Fn::If": [
                                "CapacityDesiredOverride",
                                {
                                    "Ref": "CapacityDesired"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityDesired"
                                    ]
                                }
                            ]
                        },
                        "CapacityMax": {
                            "Fn::If": [
                                "CapacityMaxOverride",
                                {
                                    "Ref": "CapacityMax"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMax"
                                    ]
                                }
                            ]
                        },
                        "CapacityMin": {
                            "Fn::If": [
                                "CapacityMinOverride",
                                {
                                    "Ref": "CapacityMin"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "CapacityMin"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CloudFront": {
            "Value": {
                "Fn::If": [
                    "CloudFrontOverride",
                    {
                        "Ref": "CloudFront"
                    },
                    "None"
                ]
            }
        },
        "CloudFrontWebACLId": {
            "Value": {
                "Fn::If": [
                    "CloudFrontWebACLIdOverride",
                    {
                        "Ref": "CloudFrontWebACLId"
                    },
                    "None"
                ]
            }
        },
        "ContainerDefinitions1Constraints": {
            "Value": {
                "Fn::Sub": [
                    "Cpu:${Cpu},Memory:${Memory},MemoryReservation:${MemoryReservation}",
                    {
                        "Cpu": {
                            "Fn::If": [
                                "CpuTask",
                                {
                                    "Fn::If": [
                                        "CpuOverride",
                                        {
                                            "Ref": "Cpu"
                                        },
                                        "None"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1CpuOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Cpu"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ContainerDefinitions1Cpu"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "Memory": {
                            "Fn::If": [
                                "LaunchTypeFarGate",
                                {
                                    "Fn::If": [
                                        "MemoryOverride",
                                        {
                                            "Ref": "Memory"
                                        },
                                        512
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1MemoryOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Memory"
                                        },
                                        256
                                    ]
                                }
                            ]
                        },
                        "MemoryReservation": {
                            "Fn::If": [
                                "ContainerDefinitions1MemoryReservationOverride",
                                {
                                    "Ref": "ContainerDefinitions1MemoryReservation"
                                },
                                64
                            ]
                        }
                    }
                ]
            }
        },
        "ContainerDefinitions1Envs": {
            "Value": {
                "Fn::Sub": [
                    "NODE_ENV=${NODE_ENV}",
                    {
                        "NODE_ENV": {
                            "Fn::If": [
                                "ContainerDefinitions1EnvsNODEENVValueOverride",
                                {
                                    "Ref": "ContainerDefinitions1EnvsNODEENVValue"
                                },
                                "production"
                            ]
                        }
                    }
                ]
            }
        },
        "Cpu": {
            "Condition": "CpuTask",
            "Value": {
                "Fn::If": [
                    "CpuOverride",
                    {
                        "Ref": "Cpu"
                    },
                    "None"
                ]
            }
        },
        "DeploymentConfigurationMaximumPercent": {
            "Value": {
                "Fn::If": [
                    "DeploymentConfigurationMaximumPercentOverride",
                    {
                        "Ref": "DeploymentConfigurationMaximumPercent"
                    },
                    200
                ]
            }
        },
        "DeploymentConfigurationMinimumHealthyPercent": {
            "Value": {
                "Fn::If": [
                    "DeploymentConfigurationMinimumHealthyPercentOverride",
                    {
                        "Ref": "DeploymentConfigurationMinimumHealthyPercent"
                    },
                    100
                ]
            }
        },
        "Env": {
            "Value": {
                "Ref": "Env"
            }
        },
        "EnvApp1Version": {
            "Value": {
                "Ref": "EnvApp1Version"
            }
        },
        "EnvRole": {
            "Value": {
                "Ref": "EnvRole"
            }
        },
        "EnvStackVersion": {
            "Value": {
                "Ref": "EnvStackVersion"
            }
        },
        "HealthCheck": {
            "Value": {
                "Fn::Sub": [
                    "Path=${Path},Interval=${Interval},Timeout=${Timeout},Healthy=${Healthy},Unhealthy=${Unhealthy}",
                    {
                        "Healthy": 2,
                        "Interval": 30,
                        "Path": "/healthcheck",
                        "Timeout": 6,
                        "Unhealthy": 3
                    }
                ]
            }
        },
        "LaunchType": {
            "Value": {
                "Fn::If": [
                    "LaunchTypeOverride",
                    {
                        "Ref": "LaunchType"
                    },
                    "EC2"
                ]
            }
        },
        "ListenerLoadBalancer": {
            "Value": {
                "Fn::Sub": [
                    "HttpPort=${HttpPort},HttpsPort=${HttpsPort}",
                    {
                        "HttpPort": {
                            "Fn::If": [
                                "ListenerLoadBalancerHttpPortOverride",
                                {
                                    "Ref": "ListenerLoadBalancerHttpPort"
                                },
                                80
                            ]
                        },
                        "HttpsPort": {
                            "Fn::If": [
                                "ListenerLoadBalancerHttpsPortOverride",
                                {
                                    "Ref": "ListenerLoadBalancerHttpsPort"
                                },
                                443
                            ]
                        }
                    }
                ]
            }
        },
        "ListenerRules1": {
            "Value": {
                "Fn::Sub": [
                    "Priority=${Priority},HostHeader=${HostHeader}",
                    {
                        "HostHeader": {
                            "Fn::If": [
                                "ListenerRules1HostHeaderOverride",
                                {
                                    "Ref": "ListenerRules1HostHeader"
                                },
                                {
                                    "Fn::Sub": "*${EnvRole}.*"
                                }
                            ]
                        },
                        "Priority": {
                            "Fn::If": [
                                "ListenerRules1PriorityOverride",
                                {
                                    "Ref": "ListenerRules1Priority"
                                },
                                2010
                            ]
                        }
                    }
                ]
            }
        },
        "LoadBalancerAccess": {
            "Value": "Public"
        },
        "LoadBalancerApplication": {
            "Value": "External"
        },
        "LoadBalancerSslCertificate": {
            "Value": {
                "Fn::If": [
                    "LoadBalancerSslCertificateOverride",
                    {
                        "Ref": "LoadBalancerSslCertificate"
                    },
                    true
                ]
            }
        },
        "LogDriver": {
            "Value": {
                "Fn::If": [
                    "LogDriverOverride",
                    {
                        "Ref": "LogDriver"
                    },
                    "awslogs"
                ]
            }
        },
        "Memory": {
            "Condition": "LaunchTypeFarGate",
            "Value": {
                "Fn::If": [
                    "MemoryOverride",
                    {
                        "Ref": "Memory"
                    },
                    512
                ]
            }
        },
        "RecordSetCloudFront": {
            "Condition": "RecordSetCloudFront",
            "Value": {
                "Fn::Sub": [
                    "${RecordSet} --> ${CloudFrontDistribution.DomainName}",
                    {
                        "RecordSet": {
                            "Fn::Sub": "${EnvRole}${RecordSetCloudFrontSuffix}.cdn.${EnvShort}.aman.arda"
                        }
                    }
                ]
            }
        },
        "RecordSetExternal": {
            "Value": {
                "Ref": "RecordSetExternal"
            }
        },
        "RepoName": {
            "Value": "arda.aman.client.portal"
        },
        "ScalingPolicyTrackings": {
            "Value": {
                "Fn::Sub": [
                    "Cpu${Statistic}:${Cpu}",
                    {
                        "Cpu": {
                            "Fn::If": [
                                "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValueOverride",
                                {
                                    "Ref": "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValue"
                                },
                                80
                            ]
                        },
                        "Statistic": ""
                    }
                ]
            }
        },
        "ScheduledActionDown": {
            "Value": {
                "Fn::Sub": [
                    "MinSize=${MinSize},MaxSize=${MaxSize},Recurrence=${Recurrence},StartTime=${StartTime}",
                    {
                        "MaxSize": {
                            "Fn::If": [
                                "ScheduledActionDownMaxSizeOverride",
                                {
                                    "Ref": "ScheduledActionDownMaxSize"
                                },
                                "k"
                            ]
                        },
                        "MinSize": {
                            "Fn::If": [
                                "ScheduledActionDownMinSizeOverride",
                                {
                                    "Ref": "ScheduledActionDownMinSize"
                                },
                                "k"
                            ]
                        },
                        "Recurrence": {
                            "Fn::If": [
                                "ScheduledActionDownRecurrenceOverride",
                                {
                                    "Ref": "ScheduledActionDownRecurrence"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionDownRecurrence"
                                    ]
                                }
                            ]
                        },
                        "StartTime": {
                            "Ref": "ScheduledActionDownStartTime"
                        }
                    }
                ]
            }
        },
        "ScheduledActionUp": {
            "Value": {
                "Fn::Sub": [
                    "MinSize=${MinSize},MaxSize=${MaxSize},Recurrence=${Recurrence},StartTime=${StartTime}",
                    {
                        "MaxSize": {
                            "Fn::If": [
                                "ScheduledActionUpMaxSizeOverride",
                                {
                                    "Ref": "ScheduledActionUpMaxSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMaxSize"
                                    ]
                                }
                            ]
                        },
                        "MinSize": {
                            "Fn::If": [
                                "ScheduledActionUpMinSizeOverride",
                                {
                                    "Ref": "ScheduledActionUpMinSize"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpMinSize"
                                    ]
                                }
                            ]
                        },
                        "Recurrence": {
                            "Fn::If": [
                                "ScheduledActionUpRecurrenceOverride",
                                {
                                    "Ref": "ScheduledActionUpRecurrence"
                                },
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "ScheduledActionUpRecurrence"
                                    ]
                                }
                            ]
                        },
                        "StartTime": {
                            "Ref": "ScheduledActionUpStartTime"
                        }
                    }
                ]
            }
        },
        "SecurityGroups": {
            "Condition": "NetworkModeAwsVpc",
            "Value": {
                "Fn::Sub": [
                    "Service=${SecurityGroupEcsService},${SecurityGroupName0}=${SecurityGroupValue0},${SecurityGroupName1}=${SecurityGroupValue1},${SecurityGroupName2}=${SecurityGroupValue2},${SecurityGroupName3}=${SecurityGroupValue3}",
                    {
                        "SecurityGroupEcsService": {
                            "Ref": "SecurityGroupEcsService"
                        },
                        "SecurityGroupName0": {
                            "Fn::Select": [
                                0,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName1": {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName2": {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupName3": {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::If": [
                                                "SecurityGroupsOverride",
                                                {
                                                    "Ref": "SecurityGroups"
                                                },
                                                "BaseInstance,None,None,None"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "SecurityGroupValue0": {
                            "Fn::If": [
                                "SecurityGroup0",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        0,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue1": {
                            "Fn::If": [
                                "SecurityGroup1",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        1,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue2": {
                            "Fn::If": [
                                "SecurityGroup2",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        2,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        },
                        "SecurityGroupValue3": {
                            "Fn::If": [
                                "SecurityGroup3",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "SecurityGroup${ImportName}",
                                            {
                                                "ImportName": {
                                                    "Fn::Select": [
                                                        3,
                                                        {
                                                            "Fn::Split": [
                                                                ",",
                                                                {
                                                                    "Fn::If": [
                                                                        "SecurityGroupsOverride",
                                                                        {
                                                                            "Ref": "SecurityGroups"
                                                                        },
                                                                        "BaseInstance,None,None,None"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                "None"
                            ]
                        }
                    }
                ]
            }
        },
        "StackType": {
            "Value": "ecs"
        }
    },
    "Parameters": {
        "AlarmTargetExternal5XXEvaluationPeriods": {
            "AllowedValues": [
                "",
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9"
            ],
            "Default": "",
            "Description": "Number of periods for alarm evaluation - 0 to disable - empty for default based on env/role",
            "Type": "String"
        },
        "AlarmTargetExternal5XXThreshold": {
            "AllowedValues": [
                "",
                "10",
                "15",
                "20",
                "25",
                "30",
                "35",
                "40",
                "45",
                "50",
                "55",
                "60",
                "65",
                "70",
                "75",
                "80",
                "85",
                "90",
                "95",
                "100"
            ],
            "Default": "",
            "Description": "Threshold for alarm triggering - empty for default based on env/role",
            "Type": "String"
        },
        "CapacityDesired": {
            "Default": "",
            "Description": "Desired Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CapacityMax": {
            "Default": "",
            "Description": "Max Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CapacityMin": {
            "Default": "",
            "Description": "Min Autoscaling Capacity - empty for default based on env/role",
            "Type": "String"
        },
        "CloudFront": {
            "AllowedValues": [
                "",
                "None",
                "True"
            ],
            "Default": "",
            "Description": "Create CloudFront Distribution - empty for default based on env/role",
            "Type": "String"
        },
        "CloudFrontAliasExtra1": {
            "Default": "",
            "Description": "Alias extra - empty for default based on env/role",
            "Type": "String"
        },
        "CloudFrontAliasExtra2": {
            "Default": "",
            "Description": "Alias extra - empty for default based on env/role",
            "Type": "String"
        },
        "CloudFrontLogging": {
            "Default": "",
            "Description": "CloudFront Logging - None to disable - empty for default based on env/role",
            "Type": "String"
        },
        "CloudFrontWebACLId": {
            "Default": "",
            "Description": "CloudFront WebACLId - empty for default based on env/role",
            "Type": "String"
        },
        "ClusterStack": {
            "Default": "",
            "Description": "Cluster Stack Name used to launch service on - - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1Cpu": {
            "Default": "",
            "Description": "Cpu Share for containers - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1EnvsNODEENVValue": {
            "Default": "",
            "Description": "NODE_ENV - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1Memory": {
            "Default": "",
            "Description": "Memory hard limit for containers - empty for default based on env/role",
            "Type": "String"
        },
        "ContainerDefinitions1MemoryReservation": {
            "Default": "",
            "Description": "Memory soft limit for containers - empty for default based on env/role",
            "Type": "String"
        },
        "Cpu": {
            "AllowedValues": [
                "",
                "None",
                "128",
                "256",
                "384",
                "512",
                "640",
                "768",
                "896",
                "1024",
                "1152",
                "1280",
                "1408",
                "1536",
                "1664",
                "1792",
                "1920",
                "2048",
                "2176",
                "2304",
                "2432",
                "2560",
                "2688",
                "2816",
                "2944",
                "3072",
                "3200",
                "3328",
                "3456",
                "3584",
                "3712",
                "3840",
                "3968",
                "4096"
            ],
            "Default": "",
            "Description": "Cpu used by task - empty for default based on env/role",
            "Type": "String"
        },
        "DeploymentConfigurationMaximumPercent": {
            "Default": "",
            "Description": "DeploymentConfiguration MaximumPercent - empty for default based on env/role",
            "Type": "String"
        },
        "DeploymentConfigurationMinimumHealthyPercent": {
            "Default": "",
            "Description": "DeploymentConfiguration MinimumHealthyPercent - empty for default based on env/role",
            "Type": "String"
        },
        "DockerLabelLastUpdate": {
            "Default": "",
            "Description": "Use to force redeploy",
            "Type": "String"
        },
        "Env": {
            "AllowedValues": [
                "dev",
                "stg",
                "prod"
            ],
            "Default": "dev",
            "Description": "Environment",
            "Type": "String"
        },
        "EnvApp1Version": {
            "AllowedPattern": "^[a-zA-Z0-9-_.]*$",
            "Default": "1",
            "Description": "EnvApp1Version",
            "Type": "String"
        },
        "EnvRole": {
            "AllowedPattern": "^[a-zA-Z0-9-_.]*$",
            "Default": "",
            "Description": "Service Role",
            "Type": "String"
        },
        "EnvShort": {
            "AllowedValues": [
                "dev",
                "stg",
                "prd"
            ],
            "Default": "dev",
            "Description": "Environment Short - NEVER CHANGE!",
            "Type": "String"
        },
        "EnvStackVersion": {
            "Default": "1",
            "Description": "Stack version, if changed with UpdateMode=Cfn triggers cfn-hup",
            "Type": "String"
        },
        "LaunchType": {
            "AllowedValues": [
                "",
                "EC2",
                "FARGATE"
            ],
            "Default": "",
            "Description": "RunTask LaunchType - empty for default based on env/role",
            "Type": "String"
        },
        "ListenerLoadBalancerHttpPort": {
            "Default": "",
            "Description": "Http Port where Load Balancer listen - empty for default based on env/role",
            "Type": "String"
        },
        "ListenerLoadBalancerHttpsPort": {
            "Default": "",
            "Description": "Http Port where Load Balancer listen - empty for default based on env/role",
            "Type": "String"
        },
        "ListenerRules1HostHeader": {
            "Default": "",
            "Description": "Listener Rule HostHeader Condition - empty for default based on env/role",
            "Type": "String"
        },
        "ListenerRules1Priority": {
            "Default": "",
            "Description": "Listener Rule Priority, lesser value = high priority - empty for default based on env/role",
            "Type": "String"
        },
        "LoadBalancerApplicationStack": {
            "Default": "",
            "Description": "LoadBalancer Application Stack to use - empty for default based on env/role",
            "Type": "String"
        },
        "LoadBalancerSslCertificate": {
            "Default": "",
            "Description": "Load Balancer External Ssl Certificate - None to disable - empty for default based on env/role",
            "Type": "String"
        },
        "LogDriver": {
            "AllowedValues": [
                "",
                "None",
                "awslogs",
                "fluentd",
                "gelf",
                "journald",
                "json-file",
                "splunk",
                "syslog"
            ],
            "Default": "",
            "Description": "Log driver for task container - empty for default",
            "Type": "String"
        },
        "Memory": {
            "Default": "",
            "Description": "Memory used by task - empty for default based on env/role",
            "Type": "String"
        },
        "NetworkMode": {
            "AllowedValues": [
                "",
                "awsvpc",
                "bridge"
            ],
            "Default": "",
            "Description": "Task NetworkMode - empty for default based on env/role",
            "Type": "String"
        },
        "RecordSetCloudFrontSuffix": {
            "Default": "",
            "Description": "RecordSetCloudFront DNS Name Suffix - empty to disable",
            "Type": "String"
        },
        "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationStatistic": {
            "Default": "",
            "Description": "Tracking APPCpu Statistic - 0 to disable - empty for default based on env/role",
            "Type": "String"
        },
        "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValue": {
            "Default": "",
            "Description": "Tracking APPCpu Value - 0 to disable - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownMaxSize": {
            "Default": "",
            "Description": "ScheduledActionDownMax Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownMinSize": {
            "Default": "",
            "Description": "ScheduledActionDownMin Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownRecurrence": {
            "Default": "",
            "Description": "ScheduledActionDownRecurrence - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionDownStartTime": {
            "Default": "",
            "Description": "ScheduledActionDownStartTime - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpMaxSize": {
            "Default": "",
            "Description": "ScheduledActionUpMax Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpMinSize": {
            "Default": "",
            "Description": "ScheduledActionUpMin Capacity - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpRecurrence": {
            "Default": "",
            "Description": "ScheduledActionUpRecurrence - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "ScheduledActionUpStartTime": {
            "Default": "",
            "Description": "ScheduledActionUpStartTime - k to keep current value - empty for default based on env/role",
            "Type": "String"
        },
        "SecurityGroups": {
            "AllowedPattern": "^(\\w*,\\w*){3}$",
            "Default": ",,,",
            "Description": "SecurityGroups List Extra - ,,, for default based on env/role",
            "Type": "String"
        }
    },
    "Resources": {
        "AlarmTargetExternal5XX": {
            "Condition": "AlarmTargetExternal5XX",
            "Properties": {
                "ActionsEnabled": "true",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": "SNSTopicCloudWatchAlarm"
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold",
                "Dimensions": [
                    {
                        "Name": "LoadBalancer",
                        "Value": {
                            "Fn::ImportValue": {
                                "Fn::Sub": [
                                    "LoadBalancerApplicationExternalFullName-${LoadBalancerApplicationStack}",
                                    {
                                        "LoadBalancerApplicationStack": {
                                            "Fn::If": [
                                                "LoadBalancerApplicationStackOverride",
                                                {
                                                    "Ref": "LoadBalancerApplicationStack"
                                                },
                                                "alb-a"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "Name": "TargetGroup",
                        "Value": {
                            "Fn::Sub": "${TargetGroupExternal.TargetGroupFullName}"
                        }
                    }
                ],
                "EvaluationPeriods": {
                    "Fn::If": [
                        "AlarmTargetExternal5XXEvaluationPeriodsOverride",
                        {
                            "Ref": "AlarmTargetExternal5XXEvaluationPeriods"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "AlarmTargetExternal5XXEvaluationPeriods"
                            ]
                        }
                    ]
                },
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": {
                    "Fn::If": [
                        "AlarmTargetExternal5XXThresholdOverride",
                        {
                            "Ref": "AlarmTargetExternal5XXThreshold"
                        },
                        "50"
                    ]
                },
                "TreatMissingData": "notBreaching"
            },
            "Type": "AWS::CloudWatch::Alarm"
        },
        "CloudFrontDistribution": {
            "Condition": "CloudFrontDistribution",
            "Properties": {
                "DistributionConfig": {
                    "Aliases": [
                        {
                            "Fn::If": [
                                "RecordSetCloudFront",
                                {
                                    "Fn::Sub": "${EnvRole}${RecordSetCloudFrontSuffix}.cdn.${EnvShort}.aman.arda"
                                },
                                {
                                    "Ref": "RecordSetExternal"
                                }
                            ]
                        },
                        {
                            "Fn::Sub": "${EnvRole}${RecordSetCloudFrontSuffix}.${EnvShort}.aman.arda"
                        },
                        {
                            "Fn::If": [
                                "CloudFrontAliasZone",
                                {
                                    "Fn::Sub": "client-portal.${EnvShort}.aman.arda"
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "CloudFrontAliasExtra1",
                                {
                                    "Fn::If": [
                                        "CloudFrontAliasExtra1Override",
                                        {
                                            "Ref": "CloudFrontAliasExtra1"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "CloudFrontAliasExtra1"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "CloudFrontAliasExtra2",
                                {
                                    "Fn::If": [
                                        "CloudFrontAliasExtra2Override",
                                        {
                                            "Ref": "CloudFrontAliasExtra2"
                                        },
                                        "None"
                                    ]
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    ],
                    "CacheBehaviors": [],
                    "Comment": {
                        "Fn::Sub": "${AWS::StackName}-${EnvRole}"
                    },
                    "DefaultCacheBehavior": {
                        "AllowedMethods": [
                            "DELETE",
                            "GET",
                            "HEAD",
                            "OPTIONS",
                            "PATCH",
                            "POST",
                            "PUT"
                        ],
                        "CachedMethods": [
                            "HEAD",
                            "GET"
                        ],
                        "Compress": "true",
                        "DefaultTTL": 0,
                        "ForwardedValues": {
                            "Cookies": {
                                "Forward": "all",
                                "WhitelistedNames": {
                                    "Fn::If": [
                                        "CloudFrontCacheBehaviors0CookiesWhitelistedNames",
                                        "",
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            },
                            "Headers": [],
                            "QueryString": "true",
                            "QueryStringCacheKeys": {
                                "Fn::If": [
                                    "CloudFrontCacheBehaviors0QueryStringCacheKeys",
                                    [],
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        },
                        "MaxTTL": 31536000,
                        "MinTTL": 0,
                        "TargetOriginId": {
                            "Fn::If": [
                                "CloudFrontOriginAdHoc",
                                {
                                    "Ref": "RecordSetExternal"
                                },
                                {
                                    "Fn::Sub": "${EnvRole}${RecordSetCloudFrontSuffix}.origin.${EnvShort}.aman.arda"
                                }
                            ]
                        },
                        "ViewerProtocolPolicy": "redirect-to-https"
                    },
                    "Enabled": "true",
                    "HttpVersion": "http2",
                    "Logging": {
                        "Fn::If": [
                            "CloudFrontLogging",
                            {
                                "Bucket": {
                                    "Fn::Sub": "${AWS::Region}-arda-aman-${EnvShort}-logs.s3.amazonaws.com"
                                },
                                "Prefix": {
                                    "Fn::Sub": "${EnvRole}.${AWS::StackName}/"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    "Origins": [
                        {
                            "CustomOriginConfig": {
                                "HTTPPort": {
                                    "Fn::If": [
                                        "CloudFrontOriginProtocolHTTP",
                                        {
                                            "Fn::If": [
                                                "ListenerLoadBalancerHttpPortOverride",
                                                {
                                                    "Ref": "ListenerLoadBalancerHttpPort"
                                                },
                                                80
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "HTTPSPort": {
                                    "Fn::If": [
                                        "CloudFrontOriginProtocolHTTPS",
                                        {
                                            "Fn::If": [
                                                "ListenerLoadBalancerHttpsPortOverride",
                                                {
                                                    "Ref": "ListenerLoadBalancerHttpsPort"
                                                },
                                                443
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                "OriginProtocolPolicy": "https-only"
                            },
                            "DomainName": {
                                "Fn::If": [
                                    "CloudFrontOriginAdHoc",
                                    {
                                        "Ref": "RecordSetExternal"
                                    },
                                    {
                                        "Fn::Sub": "${EnvRole}${RecordSetCloudFrontSuffix}.origin.${EnvShort}.aman.arda"
                                    }
                                ]
                            },
                            "Id": {
                                "Fn::If": [
                                    "CloudFrontOriginAdHoc",
                                    {
                                        "Ref": "RecordSetExternal"
                                    },
                                    {
                                        "Fn::Sub": "${EnvRole}${RecordSetCloudFrontSuffix}.origin.${EnvShort}.aman.arda"
                                    }
                                ]
                            },
                            "OriginCustomHeaders": [],
                            "OriginPath": ""
                        }
                    ],
                    "PriceClass": "PriceClass_100",
                    "ViewerCertificate": {
                        "AcmCertificateArn": {
                            "Fn::If": [
                                "CloudFrontAcmCertificate",
                                {
                                    "Fn::FindInMap": [
                                        {
                                            "Ref": "EnvShort"
                                        },
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "GlobalCertificateArn"
                                    ]
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        "CloudFrontDefaultCertificate": {
                            "Fn::If": [
                                "CloudFrontAcmCertificate",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "True"
                            ]
                        },
                        "SslSupportMethod": {
                            "Fn::If": [
                                "CloudFrontAcmCertificate",
                                "sni-only",
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    },
                    "WebACLId": {
                        "Fn::If": [
                            "CloudFrontWebACLId",
                            {
                                "Fn::If": [
                                    "CloudFrontWebACLIdOverride",
                                    {
                                        "Ref": "CloudFrontWebACLId"
                                    },
                                    "None"
                                ]
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                }
            },
            "Type": "AWS::CloudFront::Distribution"
        },
        "IAMPolicyCloudWatch": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "cloudwatch:PutMetricData"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "CloudWatch",
                "Roles": [
                    {
                        "Ref": "RoleTask"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "IAMPolicyParameterStore": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "kms:Decrypt",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::ImportValue": "KeyParameterStore"
                            }
                        },
                        {
                            "Action": "ssm:DescribeParameters",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:*"
                            }
                        },
                        {
                            "Action": "ssm:GetParameters",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvRole}/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/${EnvRole}/*"
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ParameterStore",
                "Roles": [
                    {
                        "Ref": "RoleTask"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ListenerHttpExternalRules1": {
            "Condition": "ListenerLoadBalancerHttpPort",
            "Properties": {
                "Actions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroupExternal"
                        },
                        "Type": "forward"
                    }
                ],
                "Conditions": [
                    {
                        "Field": "host-header",
                        "Values": [
                            {
                                "Fn::If": [
                                    "ListenerRules1HostHeaderOverride",
                                    {
                                        "Ref": "ListenerRules1HostHeader"
                                    },
                                    {
                                        "Fn::Sub": "*${EnvRole}.*"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "ListenerArn": {
                    "Fn::ImportValue": {
                        "Fn::Sub": [
                            "ListenerHttpDefaultExternal-${LoadBalancerApplicationStack}",
                            {
                                "LoadBalancerApplicationStack": {
                                    "Fn::If": [
                                        "LoadBalancerApplicationStackOverride",
                                        {
                                            "Ref": "LoadBalancerApplicationStack"
                                        },
                                        "alb-a"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "Priority": {
                    "Fn::If": [
                        "ListenerRules1PriorityOverride",
                        {
                            "Ref": "ListenerRules1Priority"
                        },
                        2010
                    ]
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule"
        },
        "ListenerHttpsExternalRules1": {
            "Condition": "ListenerLoadBalancerHttpsPort",
            "Properties": {
                "Actions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroupExternal"
                        },
                        "Type": "forward"
                    }
                ],
                "Conditions": [
                    {
                        "Field": "host-header",
                        "Values": [
                            {
                                "Fn::If": [
                                    "ListenerRules1HostHeaderOverride",
                                    {
                                        "Ref": "ListenerRules1HostHeader"
                                    },
                                    {
                                        "Fn::Sub": "*${EnvRole}.*"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "ListenerArn": {
                    "Fn::ImportValue": {
                        "Fn::Sub": [
                            "ListenerHttpsDefaultExternal-${LoadBalancerApplicationStack}",
                            {
                                "LoadBalancerApplicationStack": {
                                    "Fn::If": [
                                        "LoadBalancerApplicationStackOverride",
                                        {
                                            "Ref": "LoadBalancerApplicationStack"
                                        },
                                        "alb-a"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "Priority": {
                    "Fn::If": [
                        "ListenerRules1PriorityOverride",
                        {
                            "Ref": "ListenerRules1Priority"
                        },
                        2010
                    ]
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule"
        },
        "LogsLogGroup": {
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/ecs/${AWS::StackName}"
                },
                "RetentionInDays": 30
            },
            "Type": "AWS::Logs::LogGroup"
        },
        "RecordSetCloudFront": {
            "Condition": "RecordSetCloudFront",
            "Properties": {
                "AliasTarget": {
                    "DNSName": {
                        "Fn::GetAtt": [
                            "CloudFrontDistribution",
                            "DomainName"
                        ]
                    },
                    "HostedZoneId": "Z2FDTNDATAQYW2"
                },
                "HostedZoneId": {
                    "Fn::ImportValue": "HostedZoneIdEnv"
                },
                "Name": {
                    "Fn::Sub": "${EnvRole}${RecordSetCloudFrontSuffix}.cdn.${EnvShort}.aman.arda"
                },
                "Type": "A"
            },
            "Type": "AWS::Route53::RecordSet"
        },
        "RecordSetExternal": {
            "Properties": {
                "AliasTarget": {
                    "DNSName": {
                        "Fn::Sub": [
                            "dualstack.${LoadBalancerApplicationExternalDNS}",
                            {
                                "LoadBalancerApplicationExternalDNS": {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": [
                                            "LoadBalancerApplicationExternalDNS-${LoadBalancerApplicationStack}",
                                            {
                                                "LoadBalancerApplicationStack": {
                                                    "Fn::If": [
                                                        "LoadBalancerApplicationStackOverride",
                                                        {
                                                            "Ref": "LoadBalancerApplicationStack"
                                                        },
                                                        "alb-a"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "HostedZoneId": {
                        "Fn::FindInMap": [
                            {
                                "Ref": "EnvShort"
                            },
                            {
                                "Ref": "AWS::Region"
                            },
                            "HostedZoneIdLB"
                        ]
                    }
                },
                "HostedZoneId": {
                    "Fn::ImportValue": "HostedZoneIdEnv"
                },
                "Name": {
                    "Fn::Sub": "${AWS::StackName}.${EnvRole}.${AWS::Region}.${EnvShort}.aman.arda"
                },
                "Type": "A"
            },
            "Type": "AWS::Route53::RecordSet"
        },
        "RoleTask": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "ScalableTarget": {
            "Properties": {
                "MaxCapacity": {
                    "Fn::If": [
                        "CapacityMaxOverride",
                        {
                            "Ref": "CapacityMax"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityMax"
                            ]
                        }
                    ]
                },
                "MinCapacity": {
                    "Fn::If": [
                        "CapacityMinOverride",
                        {
                            "Ref": "CapacityMin"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityMin"
                            ]
                        }
                    ]
                },
                "ResourceId": {
                    "Fn::Sub": [
                        "service/${Cluster}/${Service.Name}",
                        {
                            "Cluster": {
                                "Fn::ImportValue": {
                                    "Fn::Sub": [
                                        "Cluster-${ClusterStack}",
                                        {
                                            "ClusterStack": {
                                                "Fn::If": [
                                                    "ClusterStackOverride",
                                                    {
                                                        "Ref": "ClusterStack"
                                                    },
                                                    "ecs-a"
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "RoleARN": {
                    "Fn::ImportValue": "RoleEC2ContainerServiceAutoscale"
                },
                "ScalableDimension": "ecs:service:DesiredCount",
                "ScheduledActions": [
                    {
                        "Fn::If": [
                            "ScheduledActionDownDisable",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            {
                                "ScalableTargetAction": {
                                    "MaxCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionDownCapacityMaxSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMaxOverride",
                                                    {
                                                        "Ref": "CapacityMax"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMax"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionDownKeepMaxSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionDownMaxSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionDownMaxSize"
                                                            },
                                                            "k"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "MinCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionDownCapacityMinSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMinOverride",
                                                    {
                                                        "Ref": "CapacityMin"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMin"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionDownKeepMinSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionDownMinSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionDownMinSize"
                                                            },
                                                            "k"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "Schedule": {
                                    "Fn::If": [
                                        "ScheduledActionDownRecurrenceOverride",
                                        {
                                            "Ref": "ScheduledActionDownRecurrence"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionDownRecurrence"
                                            ]
                                        }
                                    ]
                                },
                                "ScheduledActionName": "ScheduledActionDown",
                                "StartTime": {
                                    "Fn::If": [
                                        "ScheduledActionDownStartTimeOverride",
                                        {
                                            "Ref": "ScheduledActionDownStartTime"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "ScheduledActionUpDisable",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            {
                                "ScalableTargetAction": {
                                    "MaxCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionUpCapacityMaxSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMaxOverride",
                                                    {
                                                        "Ref": "CapacityMax"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMax"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionUpKeepMaxSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionUpMaxSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionUpMaxSize"
                                                            },
                                                            {
                                                                "Fn::FindInMap": [
                                                                    {
                                                                        "Ref": "EnvShort"
                                                                    },
                                                                    {
                                                                        "Ref": "AWS::Region"
                                                                    },
                                                                    "ScheduledActionUpMaxSize"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "MinCapacity": {
                                        "Fn::If": [
                                            "ScheduledActionUpCapacityMinSize",
                                            {
                                                "Fn::If": [
                                                    "CapacityMinOverride",
                                                    {
                                                        "Ref": "CapacityMin"
                                                    },
                                                    {
                                                        "Fn::FindInMap": [
                                                            {
                                                                "Ref": "EnvShort"
                                                            },
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            "CapacityMin"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "ScheduledActionUpKeepMinSize",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    },
                                                    {
                                                        "Fn::If": [
                                                            "ScheduledActionUpMinSizeOverride",
                                                            {
                                                                "Ref": "ScheduledActionUpMinSize"
                                                            },
                                                            {
                                                                "Fn::FindInMap": [
                                                                    {
                                                                        "Ref": "EnvShort"
                                                                    },
                                                                    {
                                                                        "Ref": "AWS::Region"
                                                                    },
                                                                    "ScheduledActionUpMinSize"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "Schedule": {
                                    "Fn::If": [
                                        "ScheduledActionUpRecurrenceOverride",
                                        {
                                            "Ref": "ScheduledActionUpRecurrence"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ScheduledActionUpRecurrence"
                                            ]
                                        }
                                    ]
                                },
                                "ScheduledActionName": "ScheduledActionUp",
                                "StartTime": {
                                    "Fn::If": [
                                        "ScheduledActionUpStartTimeOverride",
                                        {
                                            "Ref": "ScheduledActionUpStartTime"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                ],
                "ServiceNamespace": "ecs"
            },
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
        },
        "ScalingPolicyTrackingsAPPCpu": {
            "Condition": "ScalingPolicyTrackingsAPPCpu",
            "Properties": {
                "PolicyName": "ScalingPolicyTrackingsAPPCpu",
                "PolicyType": "TargetTrackingScaling",
                "ScalingTargetId": {
                    "Ref": "ScalableTarget"
                },
                "TargetTrackingScalingPolicyConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
                    },
                    "ScaleInCooldown": 60,
                    "ScaleOutCooldown": 60,
                    "TargetValue": {
                        "Fn::If": [
                            "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValueOverride",
                            {
                                "Ref": "ScalingPolicyTrackingsAPPCpuTargetTrackingScalingPolicyConfigurationTargetValue"
                            },
                            80
                        ]
                    }
                }
            },
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
        },
        "SecurityGroupEcsService": {
            "Condition": "NetworkModeAwsVpc",
            "Properties": {
                "GroupDescription": "Enable access to Service",
                "SecurityGroupIngress": [
                    {
                        "FromPort": 3000,
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                        },
                        "ToPort": 3000
                    }
                ],
                "VpcId": {
                    "Fn::ImportValue": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpExternalAllowedIp1": {
            "Condition": "SecurityGroupIngressPrivateLoadBalancerHttpExternalAllowedIp1",
            "Properties": {
                "CidrIp": "127.0.0.1/32",
                "FromPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        80
                    ]
                },
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        80
                    ]
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpExternalAllowedIp2": {
            "Condition": "SecurityGroupIngressPrivateLoadBalancerHttpExternalAllowedIp2",
            "Properties": {
                "CidrIp": "127.0.0.1/32",
                "FromPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        80
                    ]
                },
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        80
                    ]
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpsExternalAllowedIp1": {
            "Condition": "SecurityGroupIngressPrivateLoadBalancerHttpsExternalAllowedIp1",
            "Properties": {
                "CidrIp": "127.0.0.1/32",
                "FromPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpsPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        443
                    ]
                },
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpsPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        443
                    ]
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressPrivateLoadBalancerHttpsExternalAllowedIp2": {
            "Condition": "SecurityGroupIngressPrivateLoadBalancerHttpsExternalAllowedIp2",
            "Properties": {
                "CidrIp": "127.0.0.1/32",
                "FromPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpsPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        443
                    ]
                },
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpsPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        443
                    ]
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressPublicLoadBalancerHttpExternal": {
            "Condition": "SecurityGroupIngressPublicLoadBalancerHttpExternal",
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        80
                    ]
                },
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpPort"
                        },
                        80
                    ]
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "SecurityGroupIngressPublicLoadBalancerHttpsExternal": {
            "Condition": "SecurityGroupIngressPublicLoadBalancerHttpsExternal",
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpsPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        443
                    ]
                },
                "GroupId": {
                    "Fn::ImportValue": "SecurityGroupLoadBalancerApplicationExternal"
                },
                "IpProtocol": "tcp",
                "ToPort": {
                    "Fn::If": [
                        "ListenerLoadBalancerHttpsPortOverride",
                        {
                            "Ref": "ListenerLoadBalancerHttpsPort"
                        },
                        443
                    ]
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "Service": {
            "Properties": {
                "Cluster": {
                    "Fn::ImportValue": {
                        "Fn::Sub": [
                            "Cluster-${ClusterStack}",
                            {
                                "ClusterStack": {
                                    "Fn::If": [
                                        "ClusterStackOverride",
                                        {
                                            "Ref": "ClusterStack"
                                        },
                                        "ecs-a"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "DeploymentConfiguration": {
                    "MaximumPercent": {
                        "Fn::If": [
                            "DeploymentConfigurationMaximumPercentOverride",
                            {
                                "Ref": "DeploymentConfigurationMaximumPercent"
                            },
                            200
                        ]
                    },
                    "MinimumHealthyPercent": {
                        "Fn::If": [
                            "DeploymentConfigurationMinimumHealthyPercentOverride",
                            {
                                "Ref": "DeploymentConfigurationMinimumHealthyPercent"
                            },
                            100
                        ]
                    }
                },
                "DesiredCount": {
                    "Fn::If": [
                        "CapacityDesiredOverride",
                        {
                            "Ref": "CapacityDesired"
                        },
                        {
                            "Fn::FindInMap": [
                                {
                                    "Ref": "EnvShort"
                                },
                                {
                                    "Ref": "AWS::Region"
                                },
                                "CapacityDesired"
                            ]
                        }
                    ]
                },
                "LaunchType": {
                    "Fn::If": [
                        "LaunchTypeOverride",
                        {
                            "Ref": "LaunchType"
                        },
                        "EC2"
                    ]
                },
                "LoadBalancers": [
                    {
                        "ContainerName": {
                            "Ref": "EnvRole"
                        },
                        "ContainerPort": 3000,
                        "TargetGroupArn": {
                            "Ref": "TargetGroupExternal"
                        }
                    }
                ],
                "NetworkConfiguration": {
                    "Fn::If": [
                        "NetworkModeAwsVpc",
                        {
                            "AwsvpcConfiguration": {
                                "SecurityGroups": [
                                    {
                                        "Fn::GetAtt": [
                                            "SecurityGroupEcsService",
                                            "GroupId"
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup0",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    0,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup1",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    1,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup2",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    2,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "SecurityGroup3",
                                            {
                                                "Fn::ImportValue": {
                                                    "Fn::Sub": [
                                                        "SecurityGroup${ImportName}",
                                                        {
                                                            "ImportName": {
                                                                "Fn::Select": [
                                                                    3,
                                                                    {
                                                                        "Fn::Split": [
                                                                            ",",
                                                                            {
                                                                                "Fn::If": [
                                                                                    "SecurityGroupsOverride",
                                                                                    {
                                                                                        "Ref": "SecurityGroups"
                                                                                    },
                                                                                    "BaseInstance,None,None,None"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    }
                                ],
                                "Subnets": {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Fn::ImportValue": "SubnetsPrivate"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "PlacementStrategies": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        [
                            {
                                "Field": "instanceId",
                                "Type": "spread"
                            }
                        ]
                    ]
                },
                "Role": {
                    "Fn::If": [
                        "NetworkModeAwsVpc",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Fn::ImportValue": "RoleECSService"
                        }
                    ]
                },
                "TaskDefinition": {
                    "Ref": "TaskDefinition"
                }
            },
            "Type": "AWS::ECS::Service"
        },
        "TargetGroupExternal": {
            "Properties": {
                "HealthCheckIntervalSeconds": 30,
                "HealthCheckPath": "/healthcheck",
                "HealthCheckTimeoutSeconds": 6,
                "HealthyThresholdCount": 2,
                "Port": 3000,
                "Protocol": "HTTP",
                "TargetGroupAttributes": [
                    {
                        "Key": "deregistration_delay.timeout_seconds",
                        "Value": "30"
                    },
                    {
                        "Fn::If": [
                            "TargetGroupCookieSticky",
                            {
                                "Key": "stickiness.enabled",
                                "Value": "true"
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "TargetGroupCookieSticky",
                            {
                                "Key": "stickiness.lb_cookie.duration_seconds",
                                "Value": "None"
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "TargetType": {
                    "Fn::If": [
                        "NetworkModeAwsVpc",
                        "ip",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "UnhealthyThresholdCount": 3,
                "VpcId": {
                    "Fn::ImportValue": "VpcId"
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "TaskDefinition": {
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Cpu": {
                            "Fn::If": [
                                "CpuTask",
                                {
                                    "Fn::If": [
                                        "CpuOverride",
                                        {
                                            "Ref": "Cpu"
                                        },
                                        "None"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1CpuOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Cpu"
                                        },
                                        {
                                            "Fn::FindInMap": [
                                                {
                                                    "Ref": "EnvShort"
                                                },
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "ContainerDefinitions1Cpu"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "DockerLabels": {
                            "Fn::If": [
                                "DockerLabelLastUpdateOverride",
                                {
                                    "LastUpdate": {
                                        "Ref": "DockerLabelLastUpdate"
                                    }
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        "Environment": [
                            {
                                "Name": "NODE_ENV",
                                "Value": {
                                    "Fn::If": [
                                        "ContainerDefinitions1EnvsNODEENVValueOverride",
                                        {
                                            "Ref": "ContainerDefinitions1EnvsNODEENVValue"
                                        },
                                        "production"
                                    ]
                                }
                            },
                            {
                                "Name": "EnvRegion",
                                "Value": {
                                    "Ref": "AWS::Region"
                                }
                            },
                            {
                                "Name": "Env",
                                "Value": {
                                    "Ref": "Env"
                                }
                            },
                            {
                                "Name": "EnvAbbr",
                                "Value": {
                                    "Ref": "EnvShort"
                                }
                            },
                            {
                                "Name": "EnvBrand",
                                "Value": "aman.arda"
                            },
                            {
                                "Name": "EnvRole",
                                "Value": {
                                    "Ref": "EnvRole"
                                }
                            },
                            {
                                "Name": "EnvStackName",
                                "Value": {
                                    "Ref": "AWS::StackName"
                                }
                            },
                            {
                                "Name": "EnvClusterStackName",
                                "Value": {
                                    "Fn::If": [
                                        "ClusterStackOverride",
                                        {
                                            "Ref": "ClusterStack"
                                        },
                                        "ecs-a"
                                    ]
                                }
                            }
                        ],
                        "Essential": "true",
                        "Image": {
                            "Fn::Sub": [
                                "${EcrAccount}.dkr.ecr.${AWS::Region}.amazonaws.com/${RepoName}:${EnvApp1Version}",
                                {
                                    "EcrAccount": {
                                        "Fn::FindInMap": [
                                            {
                                                "Ref": "EnvShort"
                                            },
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "EcrAccount"
                                        ]
                                    },
                                    "RepoName": "arda.aman.client.portal"
                                }
                            ]
                        },
                        "LogConfiguration": {
                            "Fn::If": [
                                "LogConfiguration",
                                {
                                    "LogDriver": {
                                        "Fn::If": [
                                            "LogDriverOverride",
                                            {
                                                "Ref": "LogDriver"
                                            },
                                            "awslogs"
                                        ]
                                    },
                                    "Options": {
                                        "awslogs-group": {
                                            "Ref": "LogsLogGroup"
                                        },
                                        "awslogs-region": {
                                            "Ref": "AWS::Region"
                                        },
                                        "awslogs-stream-prefix": {
                                            "Ref": "AWS::StackName"
                                        }
                                    }
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        "Memory": {
                            "Fn::If": [
                                "LaunchTypeFarGate",
                                {
                                    "Fn::If": [
                                        "MemoryOverride",
                                        {
                                            "Ref": "Memory"
                                        },
                                        512
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "ContainerDefinitions1MemoryOverride",
                                        {
                                            "Ref": "ContainerDefinitions1Memory"
                                        },
                                        256
                                    ]
                                }
                            ]
                        },
                        "MemoryReservation": {
                            "Fn::If": [
                                "ContainerDefinitions1MemoryReservationOverride",
                                {
                                    "Ref": "ContainerDefinitions1MemoryReservation"
                                },
                                64
                            ]
                        },
                        "Name": {
                            "Ref": "EnvRole"
                        },
                        "PortMappings": [
                            {
                                "ContainerPort": 3000,
                                "HostPort": {
                                    "Fn::If": [
                                        "NetworkModeAwsVpc",
                                        3000,
                                        0
                                    ]
                                },
                                "Protocol": "HTTP"
                            }
                        ]
                    }
                ],
                "Cpu": {
                    "Fn::If": [
                        "CpuTask",
                        {
                            "Fn::If": [
                                "CpuOverride",
                                {
                                    "Ref": "Cpu"
                                },
                                "None"
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "ExecutionRoleArn": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        {
                            "Fn::ImportValue": "RoleECSTaskExecution"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Memory": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        {
                            "Fn::If": [
                                "MemoryOverride",
                                {
                                    "Ref": "Memory"
                                },
                                512
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkMode": {
                    "Fn::If": [
                        "NetworkModeAwsVpc",
                        "awsvpc",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "RequiresCompatibilities": {
                    "Fn::If": [
                        "LaunchTypeFarGate",
                        [
                            "EC2",
                            "FARGATE"
                        ],
                        [
                            "EC2"
                        ]
                    ]
                },
                "TaskRoleArn": {
                    "Ref": "RoleTask"
                }
            },
            "Type": "AWS::ECS::TaskDefinition"
        }
    }
}
